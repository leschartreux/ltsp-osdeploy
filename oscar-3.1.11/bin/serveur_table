#!/bin/sh


## Copyright (c) 2003-2013 Tissoires Jean-François & Benjamin, jftissoires@gmail.com
## Cdrom Outil Système Complet d'Assistance Réseau: OSCAR
## Ce programme est sous Licence Publique Générale GNU publiée par la Free Software Foundation.

# Envoie aux clients la table de partition d'un disque et le formate.

PATH="/usr/share/oscar/bin:$PATH"
if ( test -e /usr/share/oscar/usr/choix_langue )
then
	choix_langue=`cat /usr/share/oscar/usr/choix_langue`
else
	echo "fr" > /usr/share/oscar/usr/choix_langue
	choix_langue=fr
	traduction
fi
chemin_langue=/usr/share/oscar/usr/langue/$choix_langue


#-----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
cherche_disque_maitre()	# donne le disque_maitre à envoyer la table de partition
{
	echo "\n`cat $chemin_langue/selection_13`\n\n " > /tmp/fichierquestion
	echo "\n\n`cat $chemin_langue/selection_14`" >> /tmp/fichierquestion
	
	choisir_disque_maitre
	return
}
#-----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
boite_disque() # selectionner les disques
{
##	Les fichiers sortis seront:
##	/tmp/nombre_disques
##	/tmp/bozo	# pour la boite de dialog fabriquée /tmp/exec_dialog
##	# dans /tmp/bozo:  (utile pour des essai)
##	"/dev/hda" "  20.0 GB, 20003880960 bytes "
##	"/dev/hdb" "  40.0 GB, 400077601920 bytes "
##	"/dev/sda" "  20.0 GB, 20003880960 bytes "
##	"/dev/sdb" "  40.0 GB"

rm -f /tmp/demande_fichier_disque	# pour faire /tmp/fichier_disque_dur avec seulement les disques durs
rm -f /tmp/fichier_disques
echo "" > /tmp/demande_fichier_disque
echo "" > /tmp/fichier_disques
rm -f /tmp/bozo
runme info_ddialog
grep -i Disk /tmp/fichier_disque_dur > /tmp/bozo
perl -pi -e 's/Disk //g; s/: /:/g;' /tmp/bozo
if ( test -e /tmp/cle_usb_oscar )	# ne pas proposer les nappes IDE pour faire une cle usb oscar
then
	rm -f /tmp/cle_usb_oscar
	grep -v "hda" /tmp/bozo | grep -v "hdb" | grep -v "hdc" | grep -v "hdd"  > /tmp/bozo1
else
	cp -f /tmp/bozo /tmp/bozo1
fi

awk 'BEGIN { FS=":" } { printf ("%0s %15s %25s\n","\""$1"\" \"",$2,$3"\" \\")}' /tmp/bozo1 > /tmp/bozo
rm -f /tmp/bozo1
}
#-----------------------------------------------------------------------------------------------------
choisir_disque_maitre()	#selection du disque_maitre
{
rm -f /tmp/menu_titre
rm -f /tmp/menu_texte
echo " `cat $chemin_langue/menu_136` " > /tmp/menu_titre
if ( test -e /tmp/port_usb )
then
	echo " `cat $chemin_langue/menu_137` " > /tmp/menu_titre
	rm -f /tmp/port_usb
fi
boite_disque
grep -ci dev /tmp/bozo > /tmp/nb_bozo
nb_bozo=`cat /tmp/nb_bozo`
rm -f /tmp/nb_bozo
if [ "$nb_bozo" != 1 ]
then
	runme boite_selection_bozo
	if ( test -e /tmp/sortir )
	then
		return
	fi
else
	cut -d"\"" -f2 /tmp/bozo > /tmp/tempfile
	rm -f /tmp/bozo
fi

rm -f /tmp/menu_titre
rm -f /tmp/menu_texte
rm -f /tmp/fichierquestion

perl -pi -e 's/\/dev\///g;' /tmp/tempfile
disque_maitre_simple=`cat /tmp/tempfile`	# hdaiii
rm -f /tmp/tempfile
echo "/dev/$disque_maitre_simple" > /tmp/tempfile
runme selection_disque
disque_maitre=`cat /tmp/partition`		## scsi/host0/bus0/target0/lun0/partiii
rm -f /tmp/tempfile
}
#-----------------------------------------------------------------------------------------------------
boite_envoi_table_disque_maitre()
{
vitesse_transmission=`cat vitesse_transmission`
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/menu_146` " --ok-label "`cat $chemin_langue/Envoyer`" --cancel-label "`cat $chemin_langue/Annuler`" \
	--extra-button --extra-label "`cat $chemin_langue/menu_139`" \
	--menu "\n`cat $chemin_langue/menu_147` \Zb\Z4$disque_maitre_simple `cat $chemin_langue/menu_141`\n\n" 10 72 0 \
	"" "" \
	"" "" \
	"" "`cat $chemin_langue/menu_142` \Zb\Z4$disque_maitre_simple `cat $chemin_langue/menu_143`" \
	"" "" \
	"" "`cat $chemin_langue/menu_144` \Z1`cat vitesse_transmission`/s " \
	"" "" \
	"" ""
	case $? in
	    0)	rm -f /tmp/texte
		return ;;
	    1)  rm -f /tmp/texte
		exit ;;
	    3)  choix_largeur_bande
	    	boite_envoi_table_disque_maitre
	    	;;
	    255) rm -f /tmp/texte
		exit ;;
	esac
}
#-----------------------------------------------------------------------------------------------------
installer_daemon_reseau()
{
# mise_en_reseau_asynchrone

echo "synchrone,table," > /tmp/mode_transfert
lancer_avahi serveur
if ( test -e /tmp/sortir )
then
    rm -f /tmp/sortir
    rm -f /tmp/ip_mcast_rdv
    exit
fi
}
#-----------------------------------------------------------------------------------------------------
envoyer_table_disque_maitre()
{
rm -f ctrl_serveur
echo "serveur_table" > ctrl_serveur

vitesse_transmission=`cat vitesse_transmission`

	rm -f table_partitions.mbr
	rm -f table_partitions.sf
	dd if=/dev/$disque_maitre of=table_partitions.mbr count=1 bs=512 2>/dev/null
	# sfdisk -d /dev/$disque_maitre > table_partitions.sf 2>/dev/null
	echo "$disque_maitre" > /tmp/disque_table_sauvegarder_sf
	runme sauver_table_partition_sf
	cp -f /tmp/disque_table_sauvegarder_sf table_partitions.sf
	rm -f /tmp/disque_table_sauvegarder_sf
	
# taille du disque a envoyer:
# sfdisk -s > /tmp/les_disques 2>/dev/null
# echo "grep -i \"`cat /tmp/partition`\" /tmp/les_disques > /tmp/les_disques1" > /tmp/exec_nom
# chmod +x /tmp/exec_nom
# /tmp/exec_nom
# perl -pi -e 's/ //g;' /tmp/les_disques1
# cut -d":" -f2 /tmp/les_disques1 > /tmp/taille_disque_envoye
cp -f /tmp/partition /tmp/calcul_taille_partition_disque
runme calcul_taille_partition_MB
cp -f /tmp/calcul_taille_partition_disque /tmp/taille_disque_envoye
rm -f /tmp/calcul_taille_partition_disque
rm -f /tmp/les_disques
rm -f /tmp/les_disques1

rm -f fichiers_depart_envoi
echo "`cat ctrl_serveur`,$disque_maitre,`cat formatage_disques`,`cat /tmp/taille_disque_envoye`" > fichiers_depart_envoi
rm -f ctrl_serveur
rm -f formatage_disques
rm -f /tmp/taille_disque_envoye

# envoyer la procedure des clients :
echo
echo "$ip_installe" > /tmp/ip_transfert
cut -d"." -f1-2 /tmp/ip_transfert > /tmp/temptransfert
debut_ip_transfert=`cat /tmp/temptransfert`
rm -f /tmp/ip_transfert
rm -f /tmp/temptransfert
envoi_differe
differe=
echo "$nombre" > /tmp/bande_verif
if ( test -e /tmp/demarrage_programme_serveur_pxe )
then
	cut -d "," -f1 /tmp/demarrage_programme_serveur_pxe > /tmp/temp_fichier_wol
	differe=`cat /tmp/temp_fichier_wol`
	rm -f /tmp/temp_fichier_wol
fi

installer_daemon_reseau

# arreter le demon synchrone
daemon_oscar stop

echo "client_table,$ip_installe,,$differe" > fichier_commande_envoi
echo
echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4`\033[1;34m."
echo
udp-sender -f fichier_commande_envoi --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
clear
echo
echo -e " ..."
echo
rm -f fichier_commande_envoi

if [ "$differe" != "" ]
then
	cp -f /usr/share/oscar/var_salle/$differe fichier_mac_adresse_envoi
	echo
	# echo -e "\033[0;34m( `cat $chemin_langue/texte_11` : $debut_ip_transfert.XXX.YYY )"
	echo -e "`cat $chemin_langue/texte_12a`\033[1;m"
	echo
	echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4`\033[1;34m."
	echo
	udp-sender -f fichier_mac_adresse_envoi --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
	clear
	echo
	echo -e " ..."
	echo
	rm -f fichier_mac_adresse_envoi
fi


echo
echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4`\033[1;34m."
echo
echo
udp-sender -f fichiers_depart_envoi --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
clear
echo
echo -e " ..."
echo
rm -f fichiers_depart_envoi
	echo
	echo -e "`cat $chemin_langue/texte_2`"
	echo
	echo
	echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4` `cat $chemin_langue/suivant`\033[1;34m."
	echo
	udp-sender -f table_partitions.mbr --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
	clear
	echo
	echo -e " ..."
	echo
	echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4` `cat $chemin_langue/suivant`\033[1;34m."
	echo
	udp-sender -f table_partitions.sf --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
	clear
	echo
	echo -e " ..."
	echo
	rm -f table_partitions.mbr
	rm -f table_partitions.sf
	echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4` `cat $chemin_langue/suivant`\033[1;34m."
	echo
	udp-sender -f /tmp/fichier_disque_dur --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
	clear
	echo
	echo -e " ..."
	echo
	if ! ( test -e /tmp/formatage_linux )
	then
		echo "" > /tmp/formatage_linux
	fi
	echo -e "`cat $chemin_langue/texte_3`\033[1;34m $nombre `cat $chemin_langue/texte_4` `cat $chemin_langue/suivant`\033[1;34m."
	echo
	udp-sender -f /tmp/formatage_linux --min-clients $nombre --max-bitrate $vitesse_transmission --portbase 9020 --mcast-rdv-address `cat /tmp/ip_mcast_rdv` --interface `cat /tmp/carte_ethi` ##--mcast-addr $adresse_synchrone_ctrl
	clear
	echo
	echo -e " ..."
	echo
	rm -f /tmp/formatage_linux
}
#-----------------------------------------------------------------------------------------------------
test_nombre()
{
if ( test -e /tmp/erreur_nombre )
then
	trop_grande=`cat /tmp/erreur_nombre`
fi
rm -f /tmp/erreur_nombre
if [ "$fin_test" = "oui" ]
then
    return
else
    nombre=
        DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--cancel-label "`cat $chemin_langue/Annuler`"  --title " `cat $chemin_langue/inputbox_13` " \
	--inputbox "\n$trop_grande\n`cat $chemin_langue/inputbox_19` \Zb\Z4$disque_maitre \Zn\Z2:\n " 12 80 2>/tmp/tempfile
        case $? in
	    1)  rm -f /tmp/tempfile
		rm -f /tmp/temp1
		exit
		;;
	    255) rm -f /tmp/tempfile
		rm -f /tmp/temp1
		exit
		;;
	esac
	nombre=`cat /tmp/tempfile`
	rm -f /tmp/tempfile
	rm -f /tmp/temp1
	
	test_valeur=`expr 255 - $nombre`
	controle=$?
	if [ "$controle" = "0" ]
	then
		signe_valeur=`expr substr $test_valeur 1 1`
		if [ "$signe_valeur" = "-" ]
		then
			echo
			echo "\Zb\Z1 `cat $chemin_langue/texte_10` ... " > /tmp/erreur_nombre
			sleep 1
		else
			fin_test=oui
		fi
	fi
	test_nombre
fi
}
#----------------------------------------------------------------------------------------------------
partager_nfs_partition_disque_eventuel()	# si demande par la procedure disque en nfs
{
echo "/mnt/$reponse *(rw,sync,no_root_squash)" >> /etc/exports
}
#----------------------------------------------------------------------------------------------------
partager_nfs_vfat()
{
if ! ( test -e /mnt/$reponse )
then
	mkdir /mnt/$reponse
fi
umount /mnt/$reponse 2>/dev/null
mount /dev/$reponse /mnt/$reponse
partager_nfs_partition_disque_eventuel
}
#----------------------------------------------------------------------------------------------------
boucle_partition() # sortir le type de partition Linux dans la reponse
{
	rm -f /tmp/tempfile
	echo "$type" > /tmp/tempfile
	runme prepare_boucle_partition
	nombretype=`cat /tmp/nombre`
	rm -f /tmp/nombre

numero=0
cp -f /tmp/tempfile /tmp/temp_ligne_deux_points
rm -f /tmp/tempfile
until  ( test  $numero = $nombretype )
    do
	rm -f /tmp/temp_ligne_deux_points1
	numero=$[$numero+1]
	cut -d":" -f$numero /tmp/temp_ligne_deux_points > /tmp/temp_ligne_deux_points1
	reponse=`cat /tmp/temp_ligne_deux_points1`
	reparti=$reponse
	rm -f /tmp/temp_ligne_deux_points1
	numero_hd=`expr substr $reponse 4 3`
	disque=`expr substr $reponse 1 3`       #hda
	if [ "$disque" = "$disque_maitre" ]
	then
		if [ "$type" = "ntfs" ]
		then
			if [ "$procedure_nfs_disque" = "oui" ]
			then
				# id_type=`sfdisk /dev/$disque -c $numero_hd 2>/dev/null`
				grep -i $reponse /tmp/fichier_disque_dur | grep -ci ntfs > /tmp/nb_partition_ntfs
				nb_partition_ntfs=`cat /tmp/nb_partition_ntfs`
				rm -f /tmp/nb_partition_ntfs
				if [ "$nb_partition_ntfs" = "1" ] # partition ntfs
				then
					if ! ( test -e /mnt/$reponse )
					then
						mkdir /mnt/$reponse
					fi
					umount /mnt/$reponse 2>/dev/null
					echo "ntfs" > /tmp/besoin_type
					echo "$reponse" > /tmp/monter_partition
					runme autoriser_monter_partition_oscar
					rm -f /tmp/monter_partition
					rm -f /tmp/besoin_type
					# supprimer les fichiers inutiles
					rm -f /mnt/$reponse/pagefile.sys
					rm -f /mnt/$reponse/hiberfil.sys
					partager_nfs_partition_disque_eventuel
				fi
			fi
		elif [ "$type" = "linux" ]
		then
			# id_type=`sfdisk /dev/$disque -c $numero_hd 2>/dev/null`
			grep -i $reponse /tmp/fichier_disque_dur | grep -c Linux > /tmp/nb_partition_linux
		        nb_partition_linux=`cat /tmp/nb_partition_linux`
		        rm -f /tmp/nb_partition_linux
			if [ "$nb_partition_linux" = "1" ] # partition linux non swap
			then
				# mettre en mémoire le type de formatage Linux:
				fsck /dev/$reponse -N > /tmp/fs_type
				grep -ci "reiserfs" /tmp/fs_type > /tmp/nb_fstype
				valeur=`cat /tmp/nb_fstype`
				if [ "$valeur" = "1" ] # partition ReiserFS
				then
					echo "$reponse,linux_reiserfs" >> /tmp/formatage_linux
					if [ "$procedure_nfs_disque" = "oui" ]
					then
						if ! ( test -e /mnt/$reponse )
						then
							mkdir /mnt/$reponse
						fi
						umount /mnt/$reponse 2>/dev/null
						mount -t reiserfs /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
						partager_nfs_partition_disque_eventuel
					fi
				else
					grep -ci "xfs" /tmp/fs_type > /tmp/nb_fstype
					valeur=`cat /tmp/nb_fstype`
					if [ "$valeur" = "1" ] # partition XFS
					then
						echo "$reponse,linux_xfs" >> /tmp/formatage_linux
						if [ "$procedure_nfs_disque" = "oui" ]
						then
							if ! ( test -e /mnt/$reponse )
							then
								mkdir /mnt/$reponse
							fi
							umount /mnt/$reponse 2>/dev/null
							mount -t xfs /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
							partager_nfs_partition_disque_eventuel
						fi
					else
						grep -ci "jfs" /tmp/fs_type > /tmp/nb_fstype
						valeur=`cat /tmp/nb_fstype`
						if [ "$valeur" = "1" ] # partition JFS
						then
							echo "$reponse,linux_jfs" >> /tmp/formatage_linux
							if [ "$procedure_nfs_disque" = "oui" ]
							then
								if ! ( test -e /mnt/$reponse )
								then
									mkdir /mnt/$reponse
								fi
								umount /mnt/$reponse 2>/dev/null
								mount -t jfs /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
								partager_nfs_partition_disque_eventuel
							fi
						else
							grep -ci "ext4" /tmp/fs_type > /tmp/nb_fstype
							valeur=`cat /tmp/nb_fstype`
							if [ "$valeur" = "1" ] # partition ext4
							then
								echo "$reponse,linux_ext4" >> /tmp/formatage_linux
								if [ "$procedure_nfs_disque" = "oui" ]
								then
									if ! ( test -e /mnt/$reponse )
									then
										mkdir /mnt/$reponse
									fi
									umount /mnt/$reponse 2>/dev/null
									mount -t ext4 /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
									partager_nfs_partition_disque_eventuel
								fi
							else
								grep -ci "reiser4" /tmp/fs_type > /tmp/nb_fstype
								valeur=`cat /tmp/nb_fstype`
								if [ "$valeur" = "1" ] # partition ReiserFS
								then
									echo "$reponse,linux_reiser4" >> /tmp/formatage_linux
									if [ "$procedure_nfs_disque" = "oui" ]
									then
										if ! ( test -e /mnt/$reponse )
										then
											mkdir /mnt/$reponse
										fi
										umount /mnt/$reponse 2>/dev/null
										mount -t reiser4 /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
										partager_nfs_partition_disque_eventuel
									fi
								else
									grep -ci "ext3" /tmp/fs_type > /tmp/nb_fstype
									valeur=`cat /tmp/nb_fstype`
									if [ "$valeur" = "1" ] # partition ext3
									then
										echo "$reponse,linux_ext3" >> /tmp/formatage_linux
										if [ "$procedure_nfs_disque" = "oui" ]
										then
											if ! ( test -e /mnt/$reponse )
											then
												mkdir /mnt/$reponse
											fi
											umount /mnt/$reponse 2>/dev/null
											mount -t ext3 /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
											partager_nfs_partition_disque_eventuel
										fi
									else
										grep -ci "ext2" /tmp/fs_type > /tmp/nb_fstype
										valeur=`cat /tmp/nb_fstype`
										if [ "$valeur" = "1" ] # partition ext2
										then
											echo "$reponse,linux_ext2" >> /tmp/formatage_linux
											if [ "$procedure_nfs_disque" = "oui" ]
											then
												if ! ( test -e /mnt/$reponse )
												then
													mkdir /mnt/$reponse
												fi
												umount /mnt/$reponse 2>/dev/null
												mount -t ext2 /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
												partager_nfs_partition_disque_eventuel
											fi
										else	# autres cas vfat ...
											if [ "$procedure_nfs_disque" = "oui" ]
											then
												if ! ( test -e /mnt/$reponse )
												then
													mkdir /mnt/$reponse
												fi
												umount /mnt/$reponse 2>/dev/null
												mount /dev/$reponse /mnt/$reponse 1>/dev/null 2>/dev/null
												partager_nfs_partition_disque_eventuel
												 #sda1
											fi #autres
										fi #ext2
									fi #ext3
								fi #reiser4
							fi #ext4
						fi #jfs
					fi #xfs
				fi #reiserfs
				rm -f /tmp/fs_type
				rm -f /tmp/nb_fstype
			fi #83
		fi #linux
	fi #disque_maitre
    done
rm -f /tmp/tempfile
}
#-----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
#		SERVEUR  d'un DISQUE A CLONER ici disque_maitre
#-----------------------------------------------------------------------------------------------------
#   permet l'installation d'un SERVEUR en réseau qui envoie un disque complet et sa table de partitions éventuelle
#-----------------------------------------------------------------------------------------------------
#  Prog principal
#----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
#  commandes externes de procédures

case "$1" in
    cherche_disque_maitre)
        cherche_disque_maitre
        exit 0
        ;;
    boucle_partition)	# pour envoyer le type de formatage des partitions linux
	if ( test -e /tmp/procedure_nfs_disque )
	then
		procedure_nfs_disque=oui
		#	partition_premiere_non_Extended=`cat /tmp/partition_premiere_non_Extended`
		#	rm -f /tmp/partition_premiere_non_Extended
	fi
	type="linux"
	rm -f /tmp/formatage_linux
	disque_maitre=`cat /tmp/partition`
	boucle_partition
	if [ "$procedure_nfs_disque" = "oui" ]
	then
		type="ntfs"
		boucle_partition
		
		# partager_nfs les partitions vfat:
		blkid -n /dev/$disque_maitre | grep vfat | perl -pi -e 's/\/dev\///g;' | cut -d":" -f1 > /tmp/partitions_vfat_serveur
		# prendre la premiere colonne :
		ligne_partitions_vfat_serveur=`awk '{print$1}' /tmp/partitions_vfat_serveur`
		rm -f /tmp/partitions_vfat_serveur
		for reponse in $ligne_partitions_vfat_serveur
		do
			partager_nfs_vfat
		done
	fi
	exit 0
	;;
esac

	# fin commandes externes

if ! ( test -e /etc/cdrom_ejecte )
then
	if ( test -e /etc/demarrage_cdcache )
	then
		echo "" > /etc/cdrom_ejecte	# cd ejecte
		# umount /mnt/cdrom 2>/dev/null  ; sync
		eject
	fi
fi
daemon_oscar stop
rm -f vitesse_transmission
echo "75m" > vitesse_transmission
cherche_disque_maitre
	if ( test -e /tmp/sortir )
	then
		rm -f /tmp/sortir
		exit
	fi
rm -f adresse_synchrone
rm -f /tmp/tempfile

### ici pas de mise en reseau partage_nfs
### car si demarrage disque impossible de partager en ecriture nfs 

##### l'ip est dans le fichier ip_installe_poste
lancer_avahi recherche_installe_IP
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	exit 0
fi
ip_installe=`cat ip_installe_poste`

boite_envoi_table_disque_maitre

    fin_test=non
    test_nombre
serveur_clone type_formatage
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	exit
fi
	
type="linux"
rm -f /tmp/formatage_linux
boucle_partition	# pour envoyer le type de formatage des partitions linux

envoyer_table_disque_maitre
daemon_nfs stop
if ( test -e $partition_linux/usr/share/oscar )
then
	echo "" > /tmp/procedure_lance_pxe_synchrone
	serveur_pxe tester_fin_procedure
	if ( test -e /tmp/sortir )
	then
		rm -f /tmp/sortir
		exit
	fi
fi


