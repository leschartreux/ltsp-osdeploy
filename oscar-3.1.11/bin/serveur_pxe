#!/bin/sh


## Copyright (c) 2003-2013 Tissoires Jean-François & Benjamin,  jftissoires@gmail.com
## Outil Système Complet d'Assistance Réseau: OSCAR
## Rapide de Sauvegarde aux Ordinateurs et Systèmes: RapideSOS
## Ce programme est sous Licence Publique Générale GNU publiée par la Free Software Foundation.


PATH="/usr/share/oscar/bin:$PATH"
if ( test -e /usr/share/oscar/usr/choix_langue )
then
	choix_langue=`cat /usr/share/oscar/usr/choix_langue`
else
	echo "fr" > /usr/share/oscar/usr/choix_langue
	choix_langue=fr
	traduction
fi
chemin_langue=/usr/share/oscar/usr/langue/$choix_langue

#-----------------------------------------------------------------------------------------------------
boite_autoriser_installation_serveur_dhcp()
{
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/menu_148` " \
	--ok-label "`cat $chemin_langue/menu_149`"  --cancel-label "`cat $chemin_langue/Annuler`"\
	--menu "`cat $chemin_langue/menu_150`" 13 60 0 \
	"" "`cat $chemin_langue/menu_151`"
	case $? in
	    0) 	;;
	    1)	exit;;
	    255) exit;;
	esac
}
#-----------------------------------------------------------------------------------------------------
configurer_serveur_dhcp()
{
	# configurer le serveur :
	#	ifconfig eth0 192.168.1.5 netmask 255.255.0.0
	#	route add default gw 192.168.1.254
	echo "192.168.168.69" > ip_installe_poste
	echo "255.255.0.0" > /tmp/ip_masque_poste
	runme installer_IP
	#ifconfig  eth0 192.168.168.69 netmask 255.255.0.0	# adresse du serveur
	ip_installe=192.168.168.69
	PXEBOOTSRV_LOCALIP=$ip_installe	
	route add default gw 192.168.168.254	#	adresse de passerelle activée
	#	installer installer le fichier de config pxe pour OSCAR
	#	faire pxebootsrv :
	cp -f /usr/share/oscar/bin/pxebootsrv_oscar /etc/init.d/pxebootsrv
	echo "# ------------------------ CONFIGURATION -------------------------------
# By default the current systems acts as DHCP and TFTP and HTTP server
# If you want another machine of you network to act as one of those
# you will have to turn the appropriate option yo \"no\"

# Set to \"yes\" if you want this machine to act as a DHCP server
PXEBOOTSRV_DODHCPD=\"yes\"
# Set to "yes" if you want this machine to act as a TFTP server
PXEBOOTSRV_DOTFTPD=\"yes\"
# Set to \"yes\" if you want this machine to act as an HTTP server
PXEBOOTSRV_DOHTTPD=\"yes\"

# Here is a typical PXE-Boot configuration --> update with your settings
#	PXEBOOTSRV_SUBNET=\"192.168.1.0\"
#	PXEBOOTSRV_NETMASK=\"255.255.255.0\"
#	PXEBOOTSRV_DEFROUTE=\"192.168.1.254\"
#	PXEBOOTSRV_DNS=\"192.168.1.254\"
#	PXEBOOTSRV_DHCPRANGE=\"192.168.1.100 192.168.1.150\"
#	PXEBOOTSRV_LOCALIP=\"192.168.1.5\"

PXEBOOTSRV_SUBNET=\"192.168.168.0\"
PXEBOOTSRV_NETMASK=\"255.255.255.0\"
PXEBOOTSRV_SUBNETMASK=\"255.255.0.0\"
PXEBOOTSRV_DEFROUTE=\"192.168.168.254\"
PXEBOOTSRV_DNS=\"192.168.168.254\"
PXEBOOTSRV_DHCPRANGE=\"192.168.168.70 192.168.168.250\"
PXEBOOTSRV_LOCALIP=\"192.168.168.69\"

# Keep these values to $PXEBOOTSRV_LOCALIP if the current computer
# acts as TFTP server and HTTP server as well as DHCP server
PXEBOOTSRV_TFTPSERVER=\"\$PXEBOOTSRV_LOCALIP\"       # IP address of the TFTP server
PXEBOOTSRV_HTTPSERVER=\"http://\$PXEBOOTSRV_LOCALIP/sysrcd.dat\" # download URL" > /etc/conf.d/pxebootsrv
}
#-----------------------------------------------------------------------------------------------------
configurer_client_dhcp_pour_serveur_TFTP()
{
if ! ( test -e /etc/init.d/pxebootsrv.bak )
then
	cp /etc/init.d/pxebootsrv /etc/init.d/pxebootsrv.bak
fi
	echo "# ------------------------ CONFIGURATION -------------------------------
# By default the current systems acts as DHCP and TFTP and HTTP server
# If you want another machine of you network to act as one of those
# you will have to turn the appropriate option yo \"no\"

# Set to \"yes\" if you want this machine to act as a DHCP server
PXEBOOTSRV_DODHCPD=\"no\"
# Set to \"yes\" if you want this machine to act as a TFTP server
PXEBOOTSRV_DOTFTPD=\"yes\"
# Set to \"yes\" if you want this machine to act as an HTTP server
PXEBOOTSRV_DOHTTPD=\"yes\"

PXEBOOTSRV_TFTPSERVER=\"$PXEBOOTSRV_LOCALIP\"       # IP address of the TFTP server
PXEBOOTSRV_HTTPSERVER=\"http://$PXEBOOTSRV_LOCALIP/sysrcd.dat\" # download URL	" > /etc/conf.d/pxebootsrv
}
#-----------------------------------------------------------------------------------------------------
test_nombre()
{
	nombre=`cat /tmp/temp`
	test_valeur=`expr 255 - $nombre`
	controle=$?
	if ! [ "$controle" = "0" ]
	then
	        test_valeur=erreur
	else
	    signe_valeur=`expr substr $test_valeur 1 1`
	    if [ "$signe_valeur" = "-" ]
	    then
	        test_valeur=erreur
	    fi
	fi
}
#-----------------------------------------------------------------------------------------------------
controle_ip_tftp() # vérifier la reponse ou /tmp/temp_ip
{
#		\nclass "pxeclients" {
#		\n   match if substring(option vendor-class-identifier, 0, 9) = "PXEClient";
#		\n   filename "/pxelinux.0";
#		\n}
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/inputbox_20` " \
	--cancel-label "`cat $chemin_langue/Annuler`" \
	--inputbox "\n\n`cat $chemin_langue/inputbox_21a`
	\nfilename "/pxelinux.0";\n
	`cat $chemin_langue/inputbox_22`" 25 80 $defaut 2>/tmp/temp_ip
	case $? in
    	0)	reponse=`cat /tmp/temp_ip`
		# controle ip tftp de /tmp/temp_ip
		cut -d "." -f1 /tmp/temp_ip > /tmp/temp
		test_nombre	# test si le premier terme est un nombre
		if [ "$test_valeur" = "erreur" ]
		then
			controle_ip_tftp
			return
		fi
		cut -d "." -f2 /tmp/temp_ip > /tmp/temp
		test_nombre	# test si le deuxieme terme est un nombre
		if [ "$test_valeur" = "erreur" ]
		then
			controle_ip_tftp
			return
		fi
		cut -d "." -f3 /tmp/temp_ip > /tmp/temp
		test_nombre	# test si le troisieme terme est un nombre
		if [ "$test_valeur" = "erreur" ]
		then
			controle_ip_tftp
			return
		fi
		cut -d "." -f4 /tmp/temp_ip > /tmp/temp
		test_nombre	# test si le quatrieme terme est un nombre
		if [ "$test_valeur" = "erreur" ]
		then
			controle_ip_tftp
			return
		fi
	#	rm -f /tmp/temp_ip
		 ;;
	1)	rm -f /tmp/temp
		rm -f /tmp/temp_ip
		exit ;;
	255)	rm -f /tmp/temp
		rm -f /tmp/temp_ip
		exit ;;
	esac
cut -d"." -f4-5 /tmp/temp_ip > /tmp/temp
grep -ci "\." /tmp/temp > /tmp/temp_nombre
temp_nombre=`cat /tmp/temp_nombre`
rm -f /tmp/temp
rm -f /tmp/temp_nombre
if [ "$temp_nombre" != "0" ]
then
	controle_ip_tftp
	return
fi
}
#-----------------------------------------------------------------------------------------------------
lancer_serveur_nfs_non_utilise_ici_mais_peut_etre_utile()
{
	ipserver=$PXEBOOTSRV_LOCALIP
# 	lancez un serveur nfs:
	echo "/mnt/cdrom *(rw,sync,no_root_squash)" >> /etc/exports
	/etc/init.d/nfs restart 1>/dev/null 2>/dev/null
	# pour le client :
	#	mkdir /mnt/cd_serveur
	#	/etc/init.d/nfs restart
	#	mount "$ip_serveur":/mnt/cdrom /mnt/cd_serveur
}
#-----------------------------------------------------------------------------------------------------
demander_boot_pxe()
{

grep -ci "oscar1" /usr/share/oscar/usr/isolinux18.cfg > /tmp/test_oscar_sysrcd
nombre_test_oscar_sysrcd=`cat /tmp/test_oscar_sysrcd`
rm -f /tmp/test_oscar_sysrcd
if ! [ "$nombre_test_oscar_sysrcd" = "0" ]
then	# cd fait par jf
		dialog  --no-cancel --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
		--title " `cat $chemin_langue/menu_654` " \
		--menu  "  \Zb\Z1`cat $chemin_langue/menu_655`" 7 75 0  \
		" " "\Zb\Z4`cat $chemin_langue/menu_656` \Z3$isolinux_perso\Z4" \
		" " "" \
		accepter "\Z1`cat $chemin_langue/menu_657` \Zb\Z3$isolinux_perso\Zn\Z4." \
		" " "" \
		quitter "`cat $chemin_langue/menu_61`" \
		" " "" \
		restaure "\Zn`cat $chemin_langue/menu_687`" \
		restaure1 "\Zn`cat $chemin_langue/menu_659`" \
		restaure_64 "\Zn`cat $chemin_langue/menu_660`" \
		restaure1_64 "\Zn`cat $chemin_langue/menu_661`" \
		" " "" \
		client "\Zn`cat $chemin_langue/menu_688`" \
		client1 "\Zn`cat $chemin_langue/menu_659`" \
		client_64 "\Zn`cat $chemin_langue/menu_660`" \
		client1_64 "\Zn`cat $chemin_langue/menu_661`" \
		" " "" \
		oscar "\Zn`cat $chemin_langue/menu_689`" \
		oscar1 "\Zn`cat $chemin_langue/menu_659`" \
		oscar_64 "\Zn`cat $chemin_langue/menu_660`" \
		oscar1_64 "\Zn`cat $chemin_langue/menu_661`" \
		" " "" \
		" " "" 2>/tmp/tempfile
		
	if [ $? = "255" ]
	then
	    rm -f /tmp/tempfile
	    rm -f /tmp/rien
	    echo "" > /tmp/sortir
	    return
	fi
	output=`cat /tmp/tempfile`
	rm -f /tmp/rien
	if [ "$output" = " " ]
	then
		demander_boot_pxe
	elif [ "$output" = "" ]
	then
		demander_boot_pxe
	elif [ "$output" = "quitter" ]
	then
		rm -f /tmp/isolinux_perso
		rm -f /tmp/tempfile
	        exit
	elif [ "$output" = "accepter" ]
	then
		rm -f /tmp/tempfile
		return
	fi

	echo "$output" > /tmp/noyau_differe
	if [ "$output" = "client" ]
	then
		if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default client docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		isolinux_perso=client
	        demander_boot_pxe
	elif [ "$output" = "client1" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default client1 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		isolinux_perso=client1
	        demander_boot_pxe
	elif [ "$output" = "client_64" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default client_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		isolinux_perso=client_64
	        demander_boot_pxe
	elif [ "$output" = "client1_64" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default client1_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		isolinux_perso=client1_64
		demander_boot_pxe
	elif [ "$output" = "oscar" ]	# non differe
	then
		cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
	        perl -pi -e 's/default oscar docache/default oscar docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
	        cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
	        isolinux_perso=oscar
	        demander_boot_pxe
	elif [ "$output" = "oscar1" ]	# non differe
	then
		cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
	        perl -pi -e 's/default oscar docache/default oscar1 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
	        isolinux_perso=oscar1
	        demander_boot_pxe
	elif [ "$output" = "oscar_64" ]	# non differe
	then
		cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
		perl -pi -e 's/default oscar docache/default oscar_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
	        isolinux_perso=oscar_64
	        demander_boot_pxe
	elif [ "$output" = "oscar1_64" ]	# non differe
	then
		cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
	        perl -pi -e 's/default oscar docache/default oscar1_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
	        isolinux_perso=oscar1_64
	        demander_boot_pxe
	elif [ "$output" = "restaure" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default restaure docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
	        isolinux_perso=restaure
	        demander_boot_pxe
	elif [ "$output" = "restaure1" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default restaure1 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
	        isolinux_perso=restaure1
	        demander_boot_pxe
	elif [ "$output" = "restaure_64" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default restaure_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
	        isolinux_perso=restaure_64
	        demander_boot_pxe
	elif [ "$output" = "restaure1_64" ]
	then
		if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default restaure1_64 docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
	        isolinux_perso=restaure1_64
	        demander_boot_pxe
	fi
else	# cd fait depuis sysrcd
		dialog  --no-cancel --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
		--title " `cat $chemin_langue/menu_654` " \
		--menu  "  \Zb\Z1`cat $chemin_langue/menu_655`" 7 75 0  \
		" " "\Zb\Z4`cat $chemin_langue/menu_656` \Z3$isolinux_perso\Z4" \
		" " "" \
		accepter "\Z1`cat $chemin_langue/menu_657` \Zb\Z3$isolinux_perso\Zn\Z4." \
		" " "" \
		quitter "`cat $chemin_langue/menu_61`" \
		" " "" \
		restaure "\Zn`cat $chemin_langue/menu_687`" \
		client "\Zn`cat $chemin_langue/menu_688`" \
		oscar "\Zn`cat $chemin_langue/menu_689`" \
		" " "" 2>/tmp/tempfile
		
	if [ $? = "255" ]
	then
	    rm -f /tmp/rien
	    echo "" > /tmp/sortir
	    return
	fi
	output=`cat /tmp/tempfile`
	rm -f /tmp/rien
	if [ "$output" = " " ]
	then
		demander_boot_pxe
	elif [ "$output" = "" ]
	then
		demander_boot_pxe
	elif [ "$output" = "quitter" ]
	then
		rm -f /tmp/isolinux_perso
		rm -f /tmp/tempfile
	        exit
	elif [ "$output" = "accepter" ]
	then
		rm -f /tmp/tempfile
		return
	fi
	echo "$output" > /tmp/noyau_differe
	if [ "$output" = "client" ]
	then
		if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default client docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		isolinux_perso=client
	        demander_boot_pxe
	elif [ "$output" = "oscar" ]	# non differe
	then
		cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
	        perl -pi -e 's/default oscar docache/default oscar docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
	        isolinux_perso=oscar
	        demander_boot_pxe
	elif [ "$output" = "restaure" ]
	then
	        if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$output" > /tmp/noyau_differe
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			perl -pi -e 's/default oscar docache/default restaure docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
	        isolinux_perso=restaure
	        demander_boot_pxe
	fi
fi
rm -f /tmp/tempfile
}
#-----------------------------------------------------------------------------------------------------
boite_info_differe()
{
# Informations sur les partitions
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors --ok-label "`cat $chemin_langue/Continuer`" \
	--cancel-label "`cat $chemin_langue/Annuler`" \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/menu_679` " \
	--menu " \n \Zb\Z1                              `cat $chemin_langue/Important` : \n " 10 80 0 \
	"" "" \
	"" "\Zb\Z4`cat $chemin_langue/menu_680` : \Z2" \
	"" "  \Z2`cat $chemin_langue/menu_681`. " \
	"" "  \Z2`cat $chemin_langue/menu_682`. " \
	"" "" \
	"" "\Zb\Z4`cat $chemin_langue/menu_683` : \Z2" \
	"" "  \Z2`cat $chemin_langue/menu_684`. " \
	"" "  \Z2`cat $chemin_langue/menu_685` : " \
	"" "  \Zb\Z3/oscar_var_salle/\Z5fichier\Z3.wol \Zn\Z2`cat $chemin_langue/avec` \Zb\Z300:11:22:33:44:55,poste=\Z5111" \
	"" "  \Zb\Z3`cat $chemin_langue/inputbox_7` = \Z5fichier \Z3 `cat $chemin_langue/inputbox_1` = \Z5111" \
	"" ""
case $? in
0) ;;
1) echo "" > /tmp/sortir ;;
255) echo "" > /tmp/sortir ;;
esac
}
#-----------------------------------------------------------------------------------------------------
boite_immediat_differe()
{
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Annuler`" --cancel-label "`cat $chemin_langue/Differe`" --title " `cat $chemin_langue/Procedure` PXE " \
	--extra-button --extra-label "`cat $chemin_langue/Immediat`" \
	--menu "\n\Zb\Z3 `cat $chemin_langue/menu_662` :\n\n" 10 60 0 \
	"" "" \
	"" "\Zb\Z4`cat $chemin_langue/Annuler`\Zb\Z2  : `cat $chemin_langue/menu_697`"\
	"" "\Zb\Z4`cat $chemin_langue/Immediat`\Zb\Z2 : `cat $chemin_langue/menu_663`" \
	"" "\Zb\Z4`cat $chemin_langue/Differe`\Zb\Z2  : `cat $chemin_langue/menu_664`" \
	"" ""
       case $? in
	    0)  rm -f /tmp/demarrage_programme_serveur_pxe
	    	exit
		;;
	    3)	rm -f /tmp/demarrage_programme_serveur_pxe
    		;;
	    1)	echo "differe" > /tmp/demarrage_programme_serveur_pxe
	    	boite_info_differe
	    	;;
	    255) rm -f /tmp/demarrage_programme_serveur_pxe
	    	exit
		;;
	esac
}
#-----------------------------------------------------------------------------------------------------
boite_fin_pxe()
{
if ( test -e /tmp/serveur_pxe_seul )
then
	rm -f /tmp/serveur_pxe_seul
	if [ "$procedure_oscar" = "oscar" ]
	then
		echo "\\n`cat $chemin_langue/msgbox_20a`" > /tmp/mot_passe_cederom
	else
		echo "." > /tmp/mot_passe_cederom
	fi
	echo "$PXEBOOTSRV_LOCALIP" > ip_installe_poste
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/msgbox_18` " \
	--ok-label "`cat $chemin_langue/Continuer`"  \
	--msgbox "`cat $chemin_langue/msgbox_19` \Zn\Z2$PXEBOOTSRV_LOCALIP `cat $chemin_langue/msgbox_20``cat /tmp/mot_passe_cederom`" 14 60
	case $? in
	    0) 	rm -f /tmp/mot_passe_cederom
	    exit;;
	    255) rm -f /tmp/mot_passe_cederom
	    exit;;
	esac
fi
rm -f /tmp/mot_passe_cederom
exit
}
#-----------------------------------------------------------------------------------------------------
boite_autre_partition()
{
runme info_ddialog
runme prepare_fichier_temptaille
rm -f /tmp/bozo
	perl -pi -e 's/    Blocks/\\Z1Taille(Ko)\\Zn /g;' /tmp/fichier_disque_dur

        # couleurs
	runme colorier_selection_info
 	cp -f /tmp/couleurs_info /tmp/bozo
 	rm -f /tmp/couleurs_info
	# Récupérer fichier.wol depuis une partition
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--cancel-label "`cat $chemin_langue/Annuler`" --ok-label "`cat $chemin_langue/menu_483`" \
	--extra-button --extra-label "`cat $chemin_langue/menu_484`" \
	--title " `cat $chemin_langue/menu_668` " \
	--menu "\n\Zn`cat /tmp/bozo`" 0 0 0 \
	"" "\Z2 `cat $chemin_langue/menu_669` :  " \
	"" "\Z2 `cat $chemin_langue/menu_670` : \Zb\Z4< `cat $chemin_langue/menu_484` >  "
	case $? in
	    0)	rm -f /tmp/bozo	# sur partition vue
		;;
	    1)	rm -f /tmp/bozo
	    	rm -f /tmp/demarrage_programme_serveur_pxe
	        exit;;
	    3)	rm -f /tmp/bozo	# sur autre cle USB
		echo
		runme lecture_connecteur_usb
		boite_autre_partition
		;;
	    255) rm -f /tmp/bozo
	    	rm -f /tmp/demarrage_programme_serveur_pxe
		exit;;
	esac
	
	runme montage_local
	if ( test -e /tmp/sortir )
	then
		rm -f /tmp/tempfile
		rm -f /tmp/sortir
		rm -f /tmp/demarrage_programme_serveur_pxe
		exit
	fi
}
#----------------------------------------------------------------------------------------------------
boucle_partition_var_salle() # sortir la partition dans la reponse
{
	rm -f /tmp/tempfile
	echo "$type" > /tmp/tempfile
	runme prepare_boucle_partition
	nombretype=`cat /tmp/nombre`
	rm -f /tmp/nombre
numero=0
until  ( test  $numero = $nombretype )
    do
	rm -f /tmp/tempfile1
	numero=$[$numero+1]
	cut -d":" -f$numero /tmp/tempfile > /tmp/tempfile1
	reponse=`cat /tmp/tempfile1`
	reparti=$reponse
	rm -f /tmp/tempfile1
	numero_hd=`expr substr $reponse 4 3`
	disque=`expr substr $reponse 1 3`       #hda

	echo "$reponse" > /tmp/monter_partition
	runme autoriser_monter_partition_oscar
	partition_montee=`cat /tmp/monter_partition`
	rm -f /tmp/monter_partition
	if ( test -e $partition_montee/oscar_var_salle )
	then
		cp -f  $partition_montee/oscar_var_salle/*.wol /usr/share/oscar/var_salle/ 2>/dev/null
		variable_passage_oscar_var_salle=oui
	fi
	# id_type=`sfdisk /dev/$disque -c $numero_hd 2>/dev/null`
	grep -i $reponse /tmp/fichier_disque_dur | grep -c Linux > /tmp/nb_partition_linux
        nb_partition_linux=`cat /tmp/nb_partition_linux`
        rm -f /tmp/nb_partition_linux
	if [ "$nb_partition_linux" = "1" ] # partition linux non swap
	then
		partition_linux=$reponse
		
		# apres deploiememt nfs installer les fichiers.wol situes seulement dans $partition_montee/oscar/var_poste/ :
		if ( test -e $partition_montee/oscar/var_poste )
		then
			if ! ( test -e $partition_montee/usr/share/oscar/var_salle )
			then
				mkdir $partition_montee/usr/share/oscar/var_salle 2>/dev/null
			fi
			if [ "$variable_passage_oscar_var_salle" = "oui" ]
			then
				
				cp -f /usr/share/oscar/var_salle/*.wol $partition_montee/oscar/var_poste/ 2>/dev/null
				cp -f $partition_montee/oscar/var_poste/*.wol $partition_montee/usr/share/oscar/var_salle/ 2>/dev/null
			else
				cp -f $partition_montee/oscar/var_poste/*.wol $partition_montee/usr/share/oscar/var_salle/ 2>/dev/null
			fi
			if ( test -e $partition_montee/usr/share/oscar )
			then
				# ne pas supprimer si oscar non installe
				rm -f $partition_montee/oscar/var_poste/*.wol
			fi
		fi
		
		if ( test -e $partition_montee/usr/share/oscar/var_salle )
		then
			if [ "$variable_passage_oscar_var_salle" = "oui" ]
			then
				cp -f /usr/share/oscar/var_salle/*.wol $partition_montee/usr/share/oscar/var_salle/ 2>/dev/null
			else
				cp -f $partition_montee/usr/share/oscar/var_salle/*.wol /usr/share/oscar/var_salle/ 2>/dev/null
			fi
		fi
	fi
	umount $partition_montee 2>/dev/null ; sync
    done
rm -f /tmp/tempfile
}
#----------------------------------------------------------------------------------------------------
chercher_repertoire_oscar_var_salle()
{
	# recherche sur le disque dur la partition où se trouve le repertoire oscar_var_salle et /usr/share/oscar/var_salle

type="ntfs"
echo "ntfs" > /tmp/besoin_type
variable_passage_oscar_var_salle=non
boucle_partition_var_salle
rm -f  /tmp/besoin_type
type="Linux"
boucle_partition_var_salle
type="fat32"
boucle_partition_var_salle
type="fat16"
boucle_partition_var_salle

#	type="W95 FAT 32 (LBA)"
#	boucle_partition_var_salle
#	type="W95 FAT 16 (LBA)"
#	boucle_partition_var_salle
}
#----------------------------------------------------------------------------------------------------
boites_demande_salle()
{
# Selection des fichiers des salles
echo " `cat $chemin_langue/menu_667` " > /tmp/menu_titre
echo "\Zb\Z3`cat $chemin_langue/menu_666` \Z4: " > /tmp/fichierquestion
cp /usr/share/oscar/usr/exec_dialog_src /tmp/exec_dialog -f
perl -pi -e 's/--cancel-label \"\`cat \$chemin_langue\/Annuler\`\"/--cancel-label \"\`cat \$chemin_langue\/Annuler\`\"  --extra-button --extra-label \"\`cat \$chemin_langue\/Autre\`\"/g;' /tmp/exec_dialog
echo "50" > /tmp/largeur
echo "8" > /tmp/hauteur
if ! ( test -e /usr/share/oscar/var_salle )
then
	mkdir /usr/share/oscar/var_salle
fi
chercher_repertoire_oscar_var_salle
cd /usr/share/oscar/var_salle
	echo "`ls *.wol 2>/dev/null`" > /tmp/tempbozo1
	tester_vide=`cat /tmp/tempbozo1`
	if [ "$tester_vide" = "" ]
	then
		echo "oscar_var_salle/*.wol...???" > /tmp/tempbozo1
	fi
cd /root
awk 'BEGIN { FS=":" } { printf ("%0s %s\n","\""$1"\" ","\"\" \\")}' /tmp/tempbozo1 > /tmp/bozo
rm -f /tmp/tempbozo1
cat /tmp/bozo >> /tmp/exec_dialog
rm -f /tmp/bozo
rm -f /tmp/tempfile
echo '2>/tmp/tempfile
toutou=$?
if [ $toutou = 255 ]
then
	rm -f /tmp/tempfile
	echo "" > /tmp/sortir
	exit 0
elif [ $toutou = 0 ] # ok
then
	exit 0
elif [ $toutou = 1 ]	# annuler
then
	rm -f /tmp/tempfile
	echo "" > /tmp/sortir
	exit 0
elif [ $toutou = 3 ] # autre
then
	echo "_autre_" > /tmp/tempfile
	exit 0
fi
' >> /tmp/exec_dialog

chmod +x /tmp/exec_dialog
/tmp/exec_dialog
rm -f /tmp/menu_titre
rm -f /tmp/fichierquestion
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	rm -f /tmp/demarrage_programme_serveur_pxe
	exit 0
fi 
reponse=`cat /tmp/tempfile`
if [ "$reponse" = "_autre_" ]
then
	boite_autre_partition
	reponse=`cat /tmp/tempfile`
	if ( test -e /mnt/$reponse/oscar_var_salle )
	then
		cp -f /mnt/$reponse/oscar_var_salle/* /usr/share/oscar/var_salle/
		boites_demande_salle
		return
	else
		dialog --colors --backtitle "`cat /etc/banniere_oscar`" \
		--ok-label "`cat $chemin_langue/Continuer`" \
		--title " `cat $chemin_langue/DESOLE` " \
		--msgbox "\n\n\Zb\Z1`cat $chemin_langue/menu_671` : /mnt/$reponse/oscar_var_salle ... " 9 65
		rm -f /tmp/tempfile
		boite_autre_partition
		boites_demande_salle
		return
	fi
fi
reponse=`cat /tmp/tempfile`	# le fichier des adresses mac de la salle
	# fichiers partages
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors --no-shadow \
	--backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Continuer`" \
	--title " $reponse " \
	--exit-label "`cat $chemin_langue/Continuer`" --textbox "/usr/share/oscar/var_salle/`cat /tmp/tempfile`" 10 50 \
	--and-widget --colors --ok-label "`cat $chemin_langue/Accepter`" --cancel-label "`cat $chemin_langue/Recommencer`" \
	--extra-button --extra-label "`cat $chemin_langue/Editer`" --help-button --help-label "`cat $chemin_langue/Annuler`" \
	--title " `cat $chemin_langue/menu_674` " \
	--menu "\n\Zb\Z3`cat $chemin_langue/menu_673` \n " 10 70 0 \
	"" "" \
	"" "\Zb\Z4`cat $chemin_langue/menu_675` : \Z2$reponse\Zn " \
	"" ""
        case $? in
	    0)	# ok
	    	cp -f /usr/share/oscar/var_salle/$reponse /tmp/fichier_numero_postes_clients
	    	return
	    	;;
	    1)  # cancel
		boites_demande_salle
	    	;;
	    2)  # help
	    	rm -f /tmp/tempfile
	    	rm -f /tmp/demarrage_programme_serveur_pxe
	    	exit
	    	;;
	    3)  # extra
	    	mc -e /usr/share/oscar/var_salle/$reponse
	    	boites_demande_salle
	    	;;
	    255) rm -f /tmp/tempfile
	    	rm -f /tmp/demarrage_programme_serveur_pxe
		exit
		;;
	esac
}
#-----------------------------------------------------------------------------------------------------
controle_horaire()
{
cp -f /tmp/tempfile /tmp/tmphoraire
cut -d"-" -f1 /tmp/tmphoraire > /tmp/tmphoraire1
cut -d"-" -f2 /tmp/tmphoraire > /tmp/tmphoraire2
tmphoraire=`cat /tmp/tmphoraire1`

testejour=`expr substr $tmphoraire 6 1`
if [ "$testejour" = "" ]
then
    bon_jour=`expr substr $tmphoraire 1 4`0`expr substr $tmphoraire 5 1`
else
    bon_jour=$tmphoraire
fi
echo "$bon_jour-`cat /tmp/tmphoraire2`" > /tmp/tempfile

cut -d"h" -f1 /tmp/tmphoraire2 > /tmp/tmphoraire1
cut -d"h" -f2 /tmp/tmphoraire2 > /tmp/tmpmin
tmphoraire=`cat /tmp/tmphoraire1`
testeheure=`expr substr $tmphoraire 2 1`

if [ "$testeheure" = "" ]
then
    bon_heure=0`expr substr $tmphoraire 1 1`
else
    bon_heure=$tmphoraire
fi
echo "$bon_jour-$bon_heure"h"`cat /tmp/tmpmin`" > /tmp/tempfile

cut -d"m" -f1 /tmp/tmpmin > /tmp/tmpmin1
tmpmin=`cat /tmp/tmpmin1`
if [ "$tmpmin" != "" ]
then
    testemin=`expr substr $tmpmin 1 1` 1>/dev/null 2>/dev/null
    testemin1=`expr substr $tmpmin 2 1` 1>/dev/null 2>/dev/null
else
    testemin=
    testemin1=
fi

if [ "$testemin" = "" ]
then
    bon_min=00
    echo "$bon_jour-$bon_heure"h"$bon_min"min > /tmp/tempfile
elif [ "$testemin1" = "" ]
then
    bon_min=0`expr substr $tmpmin 1 1`
    echo "$bon_jour-$bon_heure"h"$bon_min"min > /tmp/tempfile
fi

testemin=`cat /tmp/tempfile`
testemin1=`expr substr $testemin 13 1` 1>/dev/null 2>/dev/null

if [ "$testemin1" = "" ]
then
    echo "$testemin"min > /tmp/tempfile
fi
rm -f /tmp/tmphoraire
rm -f /tmp/tmphoraire1
rm -f /tmp/tmphoraire2
rm -f /tmp/tmpmin
rm -f /tmp/tmpmin1
}
#-----------------------------------------------------------------------------------------------------
boite_choix_horaire()
{
	DIALOGRC="/etc/dialogrc" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--cancel-label "`cat $chemin_langue/Annuler`"  --title " `cat $chemin_langue/menu_672` " \
	--ok-label "`cat $chemin_langue/Modifier`" \
	--extra-button --extra-label "`cat $chemin_langue/Accepter`" \
	--inputbox "\n\Z4\Zb `cat $chemin_langue/Aujourdhui` \Z2$date\Z4, \Z2$heure \n\n\Z4 `cat $chemin_langue/menu_676` : \Z3$defaut_affiche_debut  \n\Z4 `cat $chemin_langue/menu_677` :" 12 55 $defaut_affiche_debut 2>/tmp/tempfile
	case $? in
	3)
		controle_horaire
		echo "`cat /tmp/demarrage_programme_serveur_pxe`,`cat /tmp/tempfile`" > /tmp/temphoraire
		cp -f /tmp/temphoraire /tmp/demarrage_programme_serveur_pxe
		rm -f /tmp/temphoraire
		rm -f /tmp/tempfile
	;;
	0)
		controle_horaire
		defaut_affiche_debut=`cat /tmp/tempfile`
		boite_choix_horaire
	;;
	1)
		rm -f /tmp/tempfile
	    	rm -f /tmp/demarrage_programme_serveur_pxe
		exit
	;;
	255)
		rm -f /tmp/tempfile
	    	rm -f /tmp/demarrage_programme_serveur_pxe
		exit
	;;
	esac
}

#-----------------------------------------------------------------------------------------------------
boite_horaire_programmation()
{
date=$(date +%y%m%d)
heure=$(date +%kh%Mmin)
echo "$heure" > /tmp/tempheure
perl -pi -e 's/ /0/g;' /tmp/tempheure
heure=`cat /tmp/tempheure`
rm -f /tmp/tempheure
heure_debut=23h30min
defaut_affiche_debut="$date-$heure_debut"
boite_choix_horaire
}
#-----------------------------------------------------------------------------------------------------
eteindre_le_poste()
{
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/infobox_1` " \
	--infobox "\n\n\n`cat $chemin_langue/infobox_2`\n\n\n\n" 0 0

if ( test -e /etc/cdrom_ejecte )
then
	eject -t
fi
umount -a 2>/dev/null ; sync
halt
sleep 5
exit
}
#-----------------------------------------------------------------------------------------------------
choix_procedure()
{
rm -f /tmp/tempfile
calendrier=$(date +%d/%m/%y)
heure=$(date +%kh%Mmin)
rm -f /tmp/rien
echo "  \Zn  \Zn  \Zn  \Zn  \Zn  \Zn  \Zn  \Zn  \Zn \Zn  \Zn  \Zn  \Zn  " > /tmp/rien
output=exit
	#	" " "`cat $chemin_langue/menu_31`" \
	#	"client_synchrone" "`cat $chemin_langue/menu_33`" \
	#	" " "`cat $chemin_langue/menu_34`" \
	#	" " "" \
dialog  --begin 2 0 --no-cancel --colors --no-shadow \
	--backtitle "`cat /etc/banniere_oscar`" --title " `cat $chemin_langue/menu_30` " \
	--menu  "  `cat $chemin_langue/menu_1` `cat /tmp/rien`  le $calendrier à $heure " 5 0 0  \
	" " "" \
	"mode_synchrone" "`cat $chemin_langue/menu_32`" \
	"mode_asynchrone" "`cat $chemin_langue/menu_35`" \
	" " "" \
        "cable_croisé" "`cat $chemin_langue/menu_40`" \
        "sauvegarde" "`cat $chemin_langue/menu_12`" \
	"partitions" "`cat $chemin_langue/menu_20`" \
	"adresse_ip" "`cat $chemin_langue/menu_41`" \
	"installe_ip" "`cat $chemin_langue/menu_42`" \
	"supprime_ip" "`cat $chemin_langue/menu_43`" \
	"connecte_dhcp" "`cat $chemin_langue/menu_44`" \
        " " "" \
        "halt" "`cat $chemin_langue/menu_8`" \
	"oscar" "`cat $chemin_langue/menu_21`" \
	" " "" 2>/tmp/tempfile
	
if [ $? = "255" ]
then
    rm -f /tmp/tempfile
    rm -f /tmp/rien
    exit
fi
output=`cat /tmp/tempfile`
rm -f /tmp/rien

if [ "$output" = " " ]
	then
	choix_procedure
elif [ "$output" = "" ]
	then
	choix_procedure
elif [ "$output" = "mode_synchrone" ]
then
        serveur_synchrone
	choix_procedure
elif [ $output = "mode_asynchrone" ]
then
	serveur_nfs
	choix_procedure
elif [ $output = "cable_croisé" ]
then
	runme boite_aide_cable_croise
	choix_procedure
elif [ $output = "test_connexion" ]
then
	client_verif
	choix_procedure
elif [ $output = "adresse_ip" ]
then  
	runme afficher_IP
	choix_procedure
elif [ $output = "installe_ip" ]
then 
	echo
	runme ip_poste
	rm -f /tmp/sortir
	choix_procedure
elif [ $output = "supprime_ip" ]
then 
	runme supprimer_ip_ethernet
	runme afficher_IP
	choix_procedure
elif [ "$output" = "connecte_dhcp" ]
then
	runme lancer_dhcp
	runme afficher_IP
	rm -f /tmp/sortir
	choix_procedure
elif [ "$output" = "halt" ]
then
	rm -f /tmp/tempfile
        eteindre_le_poste
elif [ $output = "oscar" ]
then
	rm -f /tmp/tempfile
	exit
else
$output
fi
rm -f /tmp/tempfile
choix_procedure
}
#-----------------------------------------------------------------------------------------------------
tester_tous_les_clients_demarres()
{
if ( test -e /tmp/fichier_numero_postes_clients )
then
	# il faut vider /tmp/fichier_numero_postes_clients
	echo `gawk '{ print "_" $0 "_" }' $tftpboot_partage/client_pxe` > /tmp/temp_clients_demarres
	perl -pi -e 's/ /\" \| grep -v \"/g;' /tmp/temp_clients_demarres
	echo "grep -v \"_rien_\" /tmp/fichier_numero_postes_clients | grep -v \"`cat /tmp/temp_clients_demarres`\"  > /tmp/temp_clients_demarres1" > /tmp/temp_run
	chmod +x /tmp/temp_run
	/tmp/temp_run
	cp -f /tmp/temp_clients_demarres1 /tmp/fichier_numero_postes_clients
	rm -f /tmp/temp_run	
	rm -f /tmp/temp_clients_demarres
	rm -f /tmp/temp_clients_demarres1
	test_clients_demarres=`cat /tmp/fichier_numero_postes_clients`
	if [ "$test_clients_demarres" = "" ]
	then
		rm -f /tmp/fichier_numero_postes_clients
		faire_boot_disk1
	fi
fi
}
#-----------------------------------------------------------------------------------------------------
tester_fin_procedure()
{
if ( test -e /tmp/demarrage_programme_serveur_pxe )
then
	if ! ( test -e /tmp/procedure_lance_pxe_synchrone )
	then
		if ( test -e $tftpboot_partage/client_pxe )
		then
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/menu_680` " \
			--infobox "\n\n\n`cat $chemin_langue/infobox_4`\n\n \Zb\Z1`cat $tftpboot_partage/client_pxe`\n\n\n \Zn\Z4`cat $chemin_langue/menu_686` \Zb\Z7Ctrl_c" 0 0
			test_postes_termines=`cat $tftpboot_partage/client_pxe`
			if [ "$test_postes_termines" !=  "" ]
			then
				sleep 5
				tester_tous_les_clients_demarres
				envoi_differe securite_apres_cinq_min
				if ( test -e /tmp/mettre_boot_disk1 )
				then
					faire_boot_disk1
				fi
				tester_fin_procedure
			else
				rm -f $tftpboot_partage/client_pxe
				faire_boot_disk1
			fi
		else	# au moins attendre le demarrage du poste
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/menu_680` " \
			--infobox "\n\n\n`cat $chemin_langue/infobox_4`\n\n            \Zb\Z1`cat $chemin_langue/Recherche` ...\n\n\n \Zn\Z4`cat $chemin_langue/menu_686` \Zb\Z7Ctrl_c" 0 0
			sleep 5
			tester_fin_procedure
		fi
	else	# ne pas attendre apres la fin d'un poste car synchrone pour serveur_disque et serveur_table
		faire_boot_disk1
		rm -f /tmp/procedure_lance_pxe_synchrone
	fi
rm -f /tmp/demarrage_programme_serveur_pxe
cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
echo "" > /tmp/sortir
fi
}
#-----------------------------------------------------------------------------------------------------
faire_boot_disk1()
{
echo "default disk1
kbdmap fr.ktl
timeout 300
display f1boot.msg

label disk1
	localboot 0x80

label disk2
	localboot 0x81

label nextboot
	localboot -1" > /tmp/isolinux_perso.cfg
cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
}
#-----------------------------------------------------------------------------------------------------
test_demarrage_usb()	# inutile maintenant
{
if ( test -e /etc/demarrage_usb )
then
	if ( test -e /tmp/serveur_lance_pxe_pour_client )
	then
		rm -f /tmp/serveur_lance_pxe_pour_client
		exit 0
	fi
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/DESOLE` " \
	--ok-label "`cat $chemin_langue/Continuer`"  \
	--msgbox "`cat $chemin_langue/msgbox_16`" 13 50
	case $? in
	    0) 	exit 0 ;;
	    255) exit 0 ;;
	esac
fi
}
#-----------------------------------------------------------------------------------------------------
boite_erreur_ping_serveur_pxe()
{
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/DESOLE` " \
	--ok-label "`cat $chemin_langue/Continuer`"  \
	--msgbox "\n\Zb\Z1`cat $chemin_langue/msgbox_19a`\Zn" 7 65
	case $? in
    0) 	exit;;
    255) exit;;
esac
}
#-----------------------------------------------------------------------------------------------------
lancer_serveur_pxe()
{
for decompte in . . .
do
	sleep 1
	echo -en "\033[1;31m $decompte"
done
echo
echo
/etc/init.d/pxebootsrv restart 2>/dev/null
if ( test -e /tmp/sortir )
then
	exit
fi
if ( test -e /tmp/controle_installation_serveur_pxe )
then

	echo "" > /tmp/serveur_lance_pxe_pour_client
	serveur_pxe
else
	echo
	for decompte in . . .
	do
		sleep 1
		echo -en "\033[1;31m $decompte"
	done
	echo
	return 0
fi
}
#----------------------------------------------------------------------------------------------------
boucle_partition() # sortir la partition dans la reponse
{
	rm -f /tmp/tempfile
	echo "$type" > /tmp/tempfile
	runme prepare_boucle_partition
	nombretype=`cat /tmp/nombre`
	rm -f /tmp/nombre

numero=0
cp -f /tmp/tempfile /tmp/temp_ligne_deux_points
rm -f /tmp/tempfile
until  ( test  $numero = $nombretype )
    do
	rm -f /tmp/temp_ligne_deux_points1
	numero=$[$numero+1]
	cut -d":" -f$numero /tmp/temp_ligne_deux_points > /tmp/temp_ligne_deux_points1
	reponse=`cat /tmp/temp_ligne_deux_points1`
	reparti=$reponse
	rm -f /tmp/temp_ligne_deux_points1
	numero_hd=`expr substr $reponse 4 3`
	disque=`expr substr $reponse 1 3`       #hda
#	disque=`cut -d"/" -f1-5 /tmp/partfile1`/disc	#ide/h0/b0/t0/l0/disc
        if [ "$type" = "linux" ]
	then
		# id_type=`sfdisk /dev/$disque -c $numero_hd 2>/dev/null`
		grep -i $reponse /tmp/fichier_disque_dur | grep -c Linux > /tmp/nb_partition_linux
	        nb_partition_linux=`cat /tmp/nb_partition_linux`
	        rm -f /tmp/nb_partition_linux
		if [ "$nb_partition_linux" = "1" ] # partition linux non swap
		then
			echo "$reponse" > /tmp/monter_partition
			runme autoriser_monter_partition_oscar
			partition_linux=`cat /tmp/monter_partition`
			rm -f /tmp/monter_partition

			if ( test -e $partition_linux/image.partimage.000 ) ## sauvegarde dans ancienne version
			then
				rm -f partition_de_sauvegarde
				echo "$reponse" > partition_de_sauvegarde
				changement_version_oscar changement_partition_sauvegarde
			fi
			if ( test -e $partition_linux/oscar/image.partimage.000 ) || ( test -e $partition_linux/oscar/image.ntfs.00 ) || ( test -e $partition_linux/oscar/image_dar.1.dar ) || ( test -e $partition_linux/oscar/image_fsa.fsa )
			then
				image_trouvee=oui
				partition_image=$reponse
				return
			fi
		fi
	fi
    done
rm -f /tmp/tempfile
}
#----------------------------------------------------------------------------------------------------
cherche_image()		# recherche sur le disque dur la partition où se trouve l'image et met en fichier le type de formatage Linux
{
type="linux"
image_trouvee=non
rm -f /tmp/formatage_linux
boucle_partition
if [ "$image_trouvee" = "oui" ] # la sauvegarde est trouvée sur nappe hd ou sd
then
	echo "$partition_image" > partition_linux_sauvegarde
else
	# pas d'image
	rm -f /tmp/fichiertmp
	dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Continuer`" \
	--title " `cat $chemin_langue/DESOLE` " \
	--msgbox "\n\n`cat $chemin_langue/msgbox_2`\n\n " 10 61
	exit
fi
}
#  fin de recherche de l'image
#-----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
#		SERVEUR  PXE
#-----------------------------------------------------------------------------------------------------
#	lance le serveur pxe pour les clients OSCAR
	# adapter pour OSCAR /etc/init.d/pxebootsrv :

if ! ( test -e /tftpboot/pxelinux.cfg )
then
	mkdir /tftpboot/pxelinux.cfg
fi

#  commandes externes de procédures
case "$1" in
boite_horaire_programmation)
	boite_horaire_programmation
	exit 0
	;;
tester_fin_procedure)
	if ( test -e /tmp/tftpboot_partage )
	then
		tftpboot_partage=`cat /tmp/tftpboot_partage`
	fi
	tester_fin_procedure
	exit 0
	;;
tester_tous_les_clients_demarres)
	if ( test -e /tmp/tftpboot_partage )
	then
		tftpboot_partage=`cat /tmp/tftpboot_partage`
	fi
	tester_tous_les_clients_demarres
	exit 0
	;;
test_nombre)
	test_nombre
	echo "$test_valeur" > /tmp/test_valeur
	exit 0
	;;
esac

if ( test -e /etc/demarrage_cdrom ) || ( test -e /etc/demarrage_usb )
then
	tftpboot_partage=/tftpboot
else	# demarrage poste
	cherche_image
	echo "/mnt/$partition_image" > /tmp/repertoire_partage_nfs_oscar
	etude_montage test_demarage_serveur_poste
	repertoire_partage_nfs_oscar=`cat /tmp/repertoire_partage_nfs_oscar`
	rm -f /tmp/repertoire_partage_nfs_oscar
	tftpboot_partage=$repertoire_partage_nfs_oscar/var_poste
fi
# test_demarrage_usb # on peut maintenant faire un serveur PXE complet avec cle USB

if ! ( test -e /etc/oscar )
then
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title " `cat $chemin_langue/DESOLE` " \
	--ok-label "`cat $chemin_langue/Continuer`"  \
	--msgbox "`cat $chemin_langue/msgbox_17`" 13 60
	case $? in
	    0) 	exit;;
	    255) exit;;
	esac
fi


	perl -pi -e 's/rescue32/oscar/g; s/rescuecd/oscar/g;' /etc/init.d/pxebootsrv
if ! ( test -e /etc/cdrom_ejecte )
then
	if ( test -e /etc/demarrage_cdcache )
	then
		echo "" > /etc/cdrom_ejecte	# cd ejecte
		# umount /mnt/cdrom 2>/dev/null ; sync pour conserver les fichiers de boottftp dans /mnt/cdrom
		eject
	fi
fi
rm -f /tmp/demarrage_programme_serveur_pxe
if ( test -e /sbin/ether-wake )
then
	if ! ( test -e /tmp/controle_installation_serveur_pxe )
	then
		boite_immediat_differe
	fi
fi

	# effacer l'ip éventuel sur eth0 cree par OSCAR:
	runme supprimer_ip_ethernet
	##### recherche d'une adresse ip sur le poste:
		rm -f /tmp/carte_ethi
		runme recuperer_IP	# pour verifier ip fixe donne par OSCAR sur eth0
		if ( test -e /tmp/sortir )
		then
			rm -f /tmp/sortir
			exit
		fi
	##### l'ip est dans le fichier ip_installe_poste
	ip_installe=`cat ip_installe_poste`
	if [ "$ip_installe" = "" ]
	then
		runme lancer_dhcp
		if ( test -e /tmp/sortir )
		then
			rm -f /tmp/sortir
			exit
		fi
		runme recuperer_IP
		if ( test -e /tmp/sortir )
		then
			rm -f /tmp/sortir
			exit
		fi
		ip_installe=`cat ip_installe_poste`
		if [ "$ip_installe" = "" ]
		then
			rm -f ip_installe_poste
			# boite_autoriser_installation_serveur_dhcp	# inutile car OSCAR  cherche sur les 4 cartes ethernet
			#/etc/init.d/net.eth0 stop
			configurer_serveur_dhcp
		else
			cut -f1-2 -d"." ip_installe_poste > /tmp/defaut
			defaut=`cat /tmp/defaut`.
			rm -f /tmp/defaut
			rm -f ip_installe_poste
			controle_ip_tftp
			PXEBOOTSRV_LOCALIP=`cat /tmp/temp_ip`
			rm -f /tmp/temp_ip
			if ! [ "$PXEBOOTSRV_LOCALIP" = "$ip_installe" ]
			then
				ping -w 8 $PXEBOOTSRV_LOCALIP 2>/dev/null 1>/dev/null
				test_ping_serveur_pxe=$?
				if [ "$test_ping_serveur_pxe" = "0" ]
				then
					boite_erreur_ping_serveur_pxe
				fi
			fi
			runme supprimer_ip_ethernet
			echo "$PXEBOOTSRV_LOCALIP" > ip_installe_poste
			# On conserve le masque donne par le serveur dhcp situe dans /tmp/ip_masque_poste
			#echo "255.255.0.0" > /tmp/ip_masque_poste
			runme installer_IP
			#ifconfig eth0 $PXEBOOTSRV_LOCALIP netmask 255.255.0.0
			configurer_client_dhcp_pour_serveur_TFTP
		fi
	        if ( test -e /tmp/serveur_lance_pxe_pour_client )
		then
			isolinux_perso=client # par defaut
		else
			isolinux_perso=restaure # par defaut
		fi
		if ( test -e /tmp/demarrage_programme_serveur_pxe )
		then
			echo "$isolinux_perso" > /tmp/noyau_differe
			faire_boot_disk1
		else
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			echo "perl -pi -e 's/default oscar docache/default $isolinux_perso docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg" > /tmp/exec_nom
			chmod +x /tmp/exec_nom
			/tmp/exec_nom
			rm -f /tmp/exec_nom
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		if ! ( test -e /tmp/serveur_lance_pxe_pour_client )
		then
			demander_boot_pxe
		else
			if ! ( test -e /usr/share/oscar/usr/BOOT_IMAGE )
			then
				proc_cmdline=`cat /proc/cmdline`
				echo "$proc_cmdline" > /tmp/proc_cmdline
				grep -ci "BOOT_IMAGE" /tmp/proc_cmdline > /tmp/nombre_BOOT_IMAGE
				if ( test -e /tmp/nombre_BOOT_IMAGE )
				then
					nombre_BOOT_IMAGE=`cat /tmp/nombre_BOOT_IMAGE`
				fi
				rm -f /tmp/nombre_BOOT_IMAGE
				if [ "$nombre_BOOT_IMAGE" = "1" ]	# demarrage cdrom
				then
				      	perl -pi -e 's/BOOT_IMAGE=/}/g;' /tmp/proc_cmdline
				      	cut -d"}" -f2 /tmp/proc_cmdline > /tmp/proc_cmdline1
				      	cut -d" " -f1 /tmp/proc_cmdline1 > /tmp/proc_cmdline
				      	cp -f /tmp/proc_cmdline /usr/share/oscar/usr/BOOT_IMAGE
				else
					echo oscar > /usr/share/oscar/usr/BOOT_IMAGE
				fi
				rm -f /tmp/proc_cmdline
				rm -f /tmp/proc_cmdline1
			fi
			perl -pi -e 's/\/isolinux\///g; s/\/syslinux\///g;' /usr/share/oscar/usr/BOOT_IMAGE
			cp -f /usr/share/oscar/usr/BOOT_IMAGE /tmp/tempBOOT_IMAGE
			perl -pi -e 's/oscar/client/g;' /tmp/tempBOOT_IMAGE
			isolinux_perso=`cat /tmp/tempBOOT_IMAGE`
			rm -f /tmp/tempBOOT_IMAGE
			cp -f /usr/share/oscar/usr/isolinux18.cfg /tmp/isolinux_perso.cfg
			echo "perl -pi -e 's/default oscar docache/default $isolinux_perso docache/g; s/prompt 1//g;' /tmp/isolinux_perso.cfg" > /tmp/exec_nom
			chmod +x /tmp/exec_nom
			/tmp/exec_nom
			rm -f /tmp/exec_nom
			cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		fi
		rm -f /tmp/serveur_lance_pxe_pour_client
		if [ "$isolinux_perso" = oscar ]
		then
			if ( test -e /tmp/demarrage_programme_serveur_pxe )
			then
				echo
				echo -e "\033[1;31m `cat $chemin_langue/menu_665` ... "
				echo
				sleep 3
			fi
		fi
	else
		echo
		echo " `cat $chemin_langue/texte_15` ... "
		echo
		exit
	fi
	echo
	echo -e "\033[1;33m OSCAR \033[1;34m`cat $chemin_langue/menu_658` ..."
	echo
	
	if ! ( test -e /etc/demarrage_cdrom )
	then
		if ! ( test -e /etc/demarrage_usb )	# demarrage usb autorise maintenant
		then
			umount /mnt/cdrom 1>/dev/null 2>/dev/null ; sync
			
				chmod 666 /usr/share/oscar/usr/oscar_usb/sysrcd.dat
				cd /usr/share/oscar/usr/oscar_usb
				echo "`md5sum sysrcd.dat`" > /usr/share/oscar/usr/oscar_usb/sysrcd.md5
				
			cd /root
			cp -fR /usr/share/oscar/usr/oscar_usb/* /tftpboot/
		fi
	fi
	# lancer_serveur_nfs_non_utilise
	cp -f /usr/share/oscar/bin/pxebootsrv_oscar /etc/init.d/pxebootsrv
	lancer_serveur_pxe
	echo "" > /etc/serveur_pxe_lance
	
	procedure_oscar=`expr substr $isolinux_perso 1 5`
	if ! ( test -e /tmp/demarrage_programme_serveur_pxe )
	then
		boite_fin_pxe
	elif [ "$procedure_oscar" = "oscar" ]
	then
		boite_fin_pxe
	fi
	rm -f /tmp/fichier_numero_postes_clients
	boites_demande_salle
	# fichier des numeros des postes clients :
	perl -pi -e 's/poste=/;/g;' /tmp/fichier_numero_postes_clients
	cut -d";" -f2 /tmp/fichier_numero_postes_clients > /tmp/fichier_numero_postes_clients1
	gawk '{ print "_" $0 "_" }' /tmp/fichier_numero_postes_clients1 > /tmp/fichier_numero_postes_clients
	grep -v "__" /tmp/fichier_numero_postes_clients > /tmp/fichier_numero_postes_clients1
	cp -f /tmp/fichier_numero_postes_clients1 /tmp/fichier_numero_postes_clients
	rm -f /tmp/fichier_numero_postes_clients1
	echo "$reponse" > /tmp/demarrage_programme_serveur_pxe	# fichier salle en premiere position
	boite_horaire_programmation
	# dans /tmp/demarrage_programme_serveur_pxe : fichier.wol,heure
	procedure_restauration=`expr substr $isolinux_perso 1 8`
	if [ "$procedure_restauration" = "restaure" ]
	then
		if [ "$partition_linux" != "" ]
		then	# mise_en_reseau_asynchrone
			if ! ( test -e /mnt/tftpboot_mnt )
			then
				mkdir /mnt/tftpboot_mnt
			fi
			
			# test demarrage poste
			echo "$partition_linux" > /tmp/repertoire_partage_nfs_oscar
			etude_montage test_demarage_serveur_poste
			repertoire_partage_nfs_oscar=`cat /tmp/repertoire_partage_nfs_oscar`
			rm -f /tmp/repertoire_partage_nfs_oscar
			echo "$repertoire_partage_nfs_oscar *(rw,sync,no_root_squash)" >> /etc/exports
			
			if ( test -e /etc/demarrage_cdrom ) || ( test -e /etc/demarrage_usb )
			then
				echo "/tftpboot *(fsid=0,rw,no_subtree_check,all_squash,insecure)" >> /etc/exports
				tftpboot_partage=/tftpboot
			else	# demarrage poste
				if ! ( test -e $repertoire_partage_nfs_oscar/var_poste )
				then
					mkdir $repertoire_partage_nfs_oscar/var_poste
				fi
				tftpboot_partage=$repertoire_partage_nfs_oscar/var_poste
				echo "$tftpboot_partage" > /tmp/tftpboot_partage
			fi
			/etc/init.d/nfs restart 1>/dev/null 2>/dev/null
			rm -f $tftpboot_partage/client_pxe
			envoi_differe
			tester_fin_procedure
			rm -f /tmp/sortir
		else
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/menu_680` " \
			--infobox "\n\n\n`cat $chemin_langue/infobox_4`\n\n            \Zb\Z1`cat $chemin_langue/Patience` ...\n\n\n \Zn\Z4`cat $chemin_langue/menu_686` \Zb\Z7Ctrl_c" 0 0
			envoi_differe
			sleep 300	# attendre 5 min
			rm -f /tmp/sortir
		fi
	else
		choix_procedure
	fi
