#!/sbin/runscript
# Distributed under the terms of the GNU General Public License, v2 or later

PATH="/usr/share/oscar/bin:$PATH"
if ( test -e /usr/share/oscar/usr/choix_langue )
then
	choix_langue=`cat /usr/share/oscar/usr/choix_langue`
else
	echo "fr" > /usr/share/oscar/usr/choix_langue
	choix_langue=fr
	traduction
fi
chemin_langue=/usr/share/oscar/usr/langue/$choix_langue


depend() 
{
	need net
}


start()
{
	ebegin "Starting the pxe-boot-server"
	echo "" > /tmp/controle_installation_serveur_pxe

	# ---- check the cdrom files exist sauf pour isolinux/rescue32 isolinux/rescuecd
	#for curfile in sysrcd.dat  isolinux/rescuecd.igz isolinux/isolinux.cfg
	#do
	#	cur="/livemnt/boot/$curfile"
	#	if [ ! -f $cur ]
	#	then
	#		eerror "File \"$cur\" does not exists. Cannot start the pxebootsrv daemon."
	#		return 1
	#	fi
	#done

	# ---- check the config file exists
	if [ ! -f /etc/conf.d/pxebootsrv ]
	then
		eerror "The pxebootsrv configuration file \"/etc/conf.d/pxebootsrv\" does not exists. Cannot continue."
		return 1
	fi

	# ---- check the major options are set to 'yes' or 'no'
	if [ $PXEBOOTSRV_DODHCPD != "yes" ] && [ $PXEBOOTSRV_DODHCPD != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DODHCPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ $PXEBOOTSRV_DOTFTPD != "yes" ] && [ $PXEBOOTSRV_DOTFTPD != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DOTFTPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ $PXEBOOTSRV_DOHTTPD != "yes" ] && [ $PXEBOOTSRV_DOHTTPD != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DOHTTPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ $PXEBOOTSRV_DODHCPD == "yes" ]
	then
		# ---- prepare /etc/dhcp/dhcpd.conf from /etc/conf.d/pxebootsrv
		[ -f /etc/dhcp/dhcpd.conf ] && cp /etc/dhcp/dhcpd.conf /etc/dhcp/dhcpd.bak
		cp /etc/dhcp/dhcpd.orig /etc/dhcp/dhcpd.conf
	
		if [ -z "$PXEBOOTSRV_SUBNET" -o -z "$PXEBOOTSRV_NETMASK" ]
		then
			eerror "Invalid values for PXEBOOTSRV_SUBNET or PXEBOOTSRV_NETMASK"
			return 1
		else
			sed -i -e "s/subnet 192.168.1.0 netmask 255.255.255.0/subnet $PXEBOOTSRV_SUBNET netmask $PXEBOOTSRV_NETMASK/" /etc/dhcp/dhcpd.conf
			sed -i -e "s/option subnet-mask 255.255.255.0;/option subnet-mask $PXEBOOTSRV_SUBNETMASK;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_DEFROUTE" ]
		then
			eerror "The config variable PXEBOOTSRV_DEFROUTE is missing"
			return 1
		else
			sed -i -e "s/option routers 192.168.1.254;/option routers $PXEBOOTSRV_DEFROUTE;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_DHCPRANGE" ]
		then
			eerror "The config variable PXEBOOTSRV_DHCPRANGE is missing"
			return 1
		else
			sed -i -e "s/range dynamic-bootp 192.168.1.100 192.168.1.150;/range dynamic-bootp $PXEBOOTSRV_DHCPRANGE;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_TFTPSERVER" ]
		then
			eerror "The config variable PXEBOOTSRV_TFTPSERVER is missing"
			return 1
		else
			sed -i -e "s/next-server 192.168.1.5;/next-server $PXEBOOTSRV_TFTPSERVER;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ ! -z "$PXEBOOTSRV_DNS" ]
		then
			sed -i -e "s/option domain-name-servers 192.168.1.254;/option domain-name-servers $PXEBOOTSRV_DNS;/" /etc/dhcp/dhcpd.conf
		fi
	fi

	if [ $PXEBOOTSRV_DOTFTPD == "yes" ]
	then
		# ---- copy all files in isolinux to /tftpboot/
		if ( test -e /usr/share/oscar/usr/oscar_usb/isolinux )	# démarrage dd du poste ou aussi par usb
		then
			for curfile in /usr/share/oscar/usr/oscar_usb/*
			do
				if [ -f $curfile ] # if not a directory
				then
					cp $curfile /tftpboot/ --remove-destination
					if [ ! "$?" -eq '0' ]
					then
						eerror "Erreur de copie du fichier \"$curfile\" vers /tftpboot/, memoire insuffisante ?"
						return 1
					fi
				fi
			done
			ln -sf isolinux/oscar /tftpboot/oscar 1>/dev/null 2>/dev/null
			ln -sf isolinux/oscar1 /tftpboot/oscar1 1>/dev/null 2>/dev/null
			ln -sf isolinux/oscar_64 /tftpboot/oscar_64 1>/dev/null 2>/dev/null
			ln -sf isolinux/oscar164 /tftpboot/oscar164 1>/dev/null 2>/dev/null
			ln -sf isolinux/oscar.igz /tftpboot/oscar.igz 1>/dev/null 2>/dev/null
			cp -f /tftpboot/isolinux/f1boot.msg /tftpboot/
		else	# démarrage du poste cédérom
			for curfile in /livemnt/boot/isolinux/*
			do
				if [ -f $curfile ] # if not a directory
				then
					cp $curfile /tftpboot/ --remove-destination
					if [ ! "$?" -eq '0' ]
					then
						eerror "Erreur de copie du fichier \"$curfile\" vers /tftpboot/, memoire insuffisante ?"
						return 1
					fi
				fi
			done
			
			# ---- copy the bootdisks to /tftpboot/
			if ! ( test -e /etc/demarrage_usb )
			then
				cp -r --remove-destination /livemnt/boot/bootdisk /tftpboot/
				if [ ! "$?" -eq '0' ]
				then
					rm -rf /tftpboot/bootdisk
					eerror "Erreur de copie du répertoire bootdisk vers /tftpboot/, memoire insuffisante ?"
					return 1
				fi
				cp -r --remove-destination /livemnt/boot/boot /tftpboot/ 2>/dev/null
				cp -r --remove-destination /livemnt/boot/efi /tftpboot/ 2>/dev/null
			fi
		fi
		#	if ( test -e /etc/demarrage_usb )
		#	then
		#		# demarrage par usb les fichiers sont dans /livemnt/boot/ partages par serveur PXE
		#		if ( test -e /etc/demarrage_cdcache )
		#		then
		#			cp -r /tftpboot/* /livemnt/boot/
		#		else
		#			cp  -r /livemnt/boot/* /tftpboot/
		#		fi
		#	fi

		# ---- prepare pxelinux config file
		[ ! -d /tftpboot/pxelinux.cfg ] && mkdir -p /tftpboot/pxelinux.cfg
		[ -f /tftpboot/pxelinux.cfg/default.bak ] && rm -f /tftpboot/pxelinux.cfg/default.bak
		[ -f /tftpboot/pxelinux.cfg/default ] && mv /tftpboot/pxelinux.cfg/default /tftpboot/pxelinux.cfg/default.bak
		# cp -f /usr/share/oscar/usr/isolinux18.cfg /tftpboot/pxelinux.cfg/default
		cp -f /tmp/isolinux_perso.cfg /tftpboot/pxelinux.cfg/default
		rm -f /tmp/isolinux_perso.cfg
		sed -i -e "s!cdoscar!cdoscar scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER!g" /tftpboot/pxelinux.cfg/default
		cp -f /usr/share/oscar/usr/*.msg /tftpboot/
		if [ ! "$?" -eq '0' ]
		then
			eerror "Erreur de copie /usr/share/oscar/usr/*.msg vers /tftpboot/, memoire insuffisante ?"
			return 1
		fi
		if ( test -e /etc/demarrage_usb )
		then
			if ( test -e /tftpboot/syslinux ) # sinon demarrage cdrom en docache
			then
				ln -sf syslinux/oscar /tftpboot/oscar 1>/dev/null 2>/dev/null
				ln -sf syslinux/oscar1 /tftpboot/oscar1 1>/dev/null 2>/dev/null
				ln -sf syslinux/oscar_64 /tftpboot/oscar_64 1>/dev/null 2>/dev/null
				ln -sf syslinux/oscar164 /tftpboot/oscar164 1>/dev/null 2>/dev/null
				ln -sf syslinux/oscar.igz /tftpboot/oscar.igz 1>/dev/null 2>/dev/null
				cp -f /tftpboot/syslinux/pxelinux.0 /tftpboot/
				cp -f /tftpboot/syslinux/f1boot.msg /tftpboot/
			fi
		fi
	fi
	
	# pour server nfs :
	if ( test -e /etc/demarrage_cdrom ) || ( test -e /etc/demarrage_usb )
	then
		echo "/tftpboot *(fsid=0,rw,no_subtree_check,all_squash,insecure)" >> /etc/exports
		tftpboot_partage=/tftpboot
		echo "$tftpboot_partage *(fsid=0,rw,no_subtree_check,all_squash,insecure)" >> /etc/exports
	fi
	
	# stop Network manager pour eviter les conflits :
	# /etc/init.d/NetworkManager stop
	
	# ---- start the DHCPD service
	if [ $PXEBOOTSRV_DODHCPD == "yes" ]
	then
		serveur_dhcp commande_dhcpd
		if ( test -e /tmp/sortir )
		then
			rm -f /tmp/sortir
			return 1
		fi
	fi
	# ---- start the THTTPD service
	if [ $PXEBOOTSRV_DOHTTPD == "yes" ]
	then
		/etc/init.d/thttpd restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/thttpd"
			return 1
		fi 
	fi
	# ---- start the TFTPD service
	if [ $PXEBOOTSRV_DOTFTPD == "yes" ]
	then
		/etc/init.d/in.tftpd restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/in.tftpd"
			return 1
		fi 
	fi
	rm -f /tmp/controle_installation_serveur_pxe
	return 0
}

stop()
{
	ebegin "Stopping the pxe-boot-server"

	/etc/init.d/thttpd stop
	/etc/init.d/in.tftpd stop
	/etc/init.d/dhcpd stop

	return 0
}