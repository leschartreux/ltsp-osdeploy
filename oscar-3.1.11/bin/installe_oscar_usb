#!/bin/sh


## Copyright (c) 2003-2013 Tissoires Jean-François & Benjamin,  jftissoires@gmail.com
## Outil Système Complet d'Assistance Réseau: OSCAR
## Ce programme est sous Licence Publique Générale GNU publiée par la Free Software Foundation.


# Installation des fichiers Oscar sur une clé USB
# taille_partition_systeme_oscar=1700	# taille en Mo

PATH="/usr/share/oscar/bin:$PATH"
if ( test -e /usr/share/oscar/usr/choix_langue )
then
	choix_langue=`cat /usr/share/oscar/usr/choix_langue`
else
	echo "fr" > /usr/share/oscar/usr/choix_langue
	choix_langue=fr
	traduction
fi
chemin_langue=/usr/share/oscar/usr/langue/$choix_langue

if ( test -e /usr/bin/firefox-bin )
then
	navigateur_web=/usr/bin/firefox-bin
	run_navigateur=run_mozilla
elif ( test -e /usr/bin/midori )
then
	navigateur_web=/usr/bin/midori
	run_navigateur=run_midori
fi

## détermine la taille pour les versions catalyst ou sysrcd:
if ( test -e /root/sysresccd-pkg.txt )	# démarrage cd sysrcd avec ou sans option cdcache ou démarrage sur le poste si sysrcd
then	# menu pour sysrcd:
	cd_base=oscar_sysrcd
	Taille_giga=2
else
	cd_base=oscar_catalyst
	if ( test -e /etc/client_minimal )
	then
	    Taille_giga=2
	else
	    Taille_giga=2
	fi
fi
#----------------------------------------------------------------------------------------------------
test_demarrage_usb()
{
demarrage_usb_cdcache=non
demarrage_usb_sans_cdcache=non
if ( test -e /etc/demarrage_usb )
then
	if [ "$cd_base" = "oscar_sysrcd" ] # pour sysrcd
	then 
		if ( test -e /etc/demarrage_cdcache )
		then
			demarrage_usb_cdcache=oui
			if ( test -e /usr/share/oscar/usr/initialise )
			then
				DIALOGRC="/etc/dialogrc" dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
				--ok-label "`cat $chemin_langue/Sabonner`" \
				--cancel-label "`cat $chemin_langue/Continuer`" \
				--title " `cat $chemin_langue/Information` " \
				--menu "\n\Zb\Z3 Service d'accompagnement OSCAR \n\Zn " 9 55 0 \
				"" "" \
				"" "\Zb\Z1 --> `cat $chemin_langue/msgbox_78b1`" \
				"" "\Zb\Z1 --> `cat $chemin_langue/msgbox_78b2`" \
				"" "" \
				"" "" \
				"" "\Zb\Z1 `cat $chemin_langue/msgbox_78b3`" \
				"" "" \
				"" "\Zb\Z3 `cat $chemin_langue/msgbox_78b4`" \
				"" ""
				case $? in
					0)	$navigateur_web http://oscar.crdp-lyon.fr/wiki/pub/accompagnement 2>/dev/null &
						;;
					1)	;;
					255)	;;
				esac
			fi
			return
			# la suite est inutile si demarrage usb
			option=docache
			# l'option au démarrage avec la clé USB
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/DESOLE` " \
			--ok-label "`cat $chemin_langue/Continuer`"  \
			--msgbox "`cat $chemin_langue/msgbox_36` \Zb\Z3$option `cat $chemin_langue/msgbox_37`" 13 70
			case $? in
			    0) 	exit;;
			    255) exit;;
			esac
		else
			demarrage_usb_sans_cdcache=oui
		fi
	fi
fi
}
#----------------------------------------------------------------------------------------------------
test_cdrom_isolinux_cd_enleve() # test si autorisé et si cd démonté
{
if ( test -e /etc/demarrage_cdrom )
then
	if ! ( test -e /livemnt/boot/isolinux/oscar )
	then
		if ( test -e /livemnt/boot/isolinux/rescue32 ) || ( test -e /livemnt/boot/isolinux/rescuecd )	# installation non autorisée car utilisation de cd_oscar à partir de SysRCD
		then
			# Vous n'avez pas les droits administrateurs
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/DESOLE` " \
			--ok-label "`cat $chemin_langue/Continuer`"  \
			--msgbox "`cat $chemin_langue/msgbox_38`" 13 70
			case $? in
			    0) 	exit;;
			    255) exit;;
			esac
		else
			# Vous avez enlevé le cédérom
			DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
			--backtitle "`cat /etc/banniere_oscar`" \
			--title " `cat $chemin_langue/DESOLE` " \
			--ok-label "`cat $chemin_langue/Continuer`"  \
			--msgbox "`cat $chemin_langue/msgbox_39`" 17 80
			case $? in
			    0) 	exit;;
			    255) exit;;
			esac	
		fi
	fi
fi
}
#----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
info_depart_installe_oscar_sur_usb()
{
# avertir de la perte des données et ne pas se tromper de port usb
# imposer la taille mini usb : Taille_giga

if ( test -e /tmp/disque_usb_oscar )
then
	texte1=`cat $chemin_langue/menu_237b`
	texte3=`cat $chemin_langue/menu_239a`
	texte4=`cat $chemin_langue/menu_240a`
else
	texte1=`cat $chemin_langue/menu_237a`
	texte3=`cat $chemin_langue/menu_239`
	texte4=`cat $chemin_langue/menu_240`
fi
if [ "$sp_cdrom_oscar" != oui ]
then
	texte_titre=`cat $chemin_langue/menu_236`
else
	texte_titre=`cat $chemin_langue/menu_52`
	if ( test -e /tmp/RapideSOS_usb )
	then
		texte_titre=`cat $chemin_langue/menu_52b`
	fi
fi
	# Installation des fichiers OSCAR sur un port USB
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Continuer`" --cancel-label "`cat $chemin_langue/Annuler`" \
	--title " `cat $chemin_langue/menu_235` " \
	--menu "\n\Zb\Z3   $texte_titre \n\n" 10 80 0 \
	"" "" \
	"" "`cat $chemin_langue/menu_237` :" \
	"" "$texte1\Zn\Z2 " \
	"" "`cat $chemin_langue/menu_238`. " \
	"" "" \
	"" "$texte3 \Zb\Z4$Taille_giga Go\Zn\Z2. " \
	"" "" \
	"" "" \
	"" "$texte4 \Zb\Z4`cat $chemin_langue/Continuer`\Zn : "
	case $? in
	    0)	 return ;;
	    1)   echo "" > /tmp/sortir
	    	return ;;
	    255) echo "" > /tmp/sortir
	    	return ;;
	esac
}
#----------------------------------------------------------------------------------------------------
vitesse_vidage()
{
# Vous pouvez choisir parmi deux vitesses
if ( test -e /tmp/disque_usb_oscar )
then
	titre_menu=`cat $chemin_langue/menu_242a`
	texte245=`cat $chemin_langue/menu_245a`
else
	titre_menu=`cat $chemin_langue/menu_242`
	texte245=`cat $chemin_langue/menu_245`
fi
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--cancel-label "`cat $chemin_langue/menu_241`" --ok-label "`cat $chemin_langue/Annuler`"  \
	--title " $titre_menu " --extra-button --extra-label "`cat $chemin_langue/menu_244`" \
	--help-button --help-label "`cat $chemin_langue/Expert`" \
	--menu "\n\Zb\Z3   `cat $chemin_langue/menu_243` \Z1/dev/$port_usb_oscar :\n\n" 9 80 0 \
	"" "" \
	"" "\Zn`cat $chemin_langue/menu_247` :" \
	"" "" \
	"" "\Zb\Z4`cat $chemin_langue/menu_244`\Zn\Z2, $texte245." \
	"" "\Zb\Z4`cat $chemin_langue/menu_241`\Zn\Z2, `cat $chemin_langue/menu_246`." \
	"" "\Zb\Z4`cat $chemin_langue/Expert`\Zn\Z2, `cat $chemin_langue/menu_246d`." \
	"" "" \
	"" "\Zn`cat $chemin_langue/menu_248` :  \Zn "
case $? in
    3)  vidage=rapide
        ;;
    1)  vidage=minutieux
        ;;
    0) # Annuler
    echo "" > /tmp/sortir
    return
    ;;
    2) # MBR seul
    vidage=mbr_seul
    ;;
    255)
    echo "" > /tmp/sortir
    return
    ;;
esac
}
#----------------------------------------------------------------------------------------------------
proposer_la_mise_a_jour_si_usb_oscar_installe()
{
echo "$port_usb_oscar1" > /tmp/monter_partition
runme autoriser_monter_partition_oscar
partition_systeme_usb=`cat /tmp/monter_partition`
rm -f /tmp/monter_partition

mise_a_jour=formater

if ( test -e $partition_systeme_usb/syslinux/syslinux.cfg )
then
	# Vous pouvez choisir mise a jour ou formater
	if ( test -e /tmp/disque_usb_oscar )
	then
		titre_menu=`cat $chemin_langue/menu_242a`
		texte245=`cat $chemin_langue/menu_245c`
		texte246=`cat $chemin_langue/menu_246c`
	else
		titre_menu=`cat $chemin_langue/menu_242`
		texte245=`cat $chemin_langue/menu_245b`
		texte246=`cat $chemin_langue/menu_246b`
	fi
        DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
        --backtitle "`cat /etc/banniere_oscar`" \
        --cancel-label "`cat $chemin_langue/Formater`" --ok-label "`cat $chemin_langue/Annuler`"  \
        --title " $titre_menu " --extra-button --extra-label "`cat $chemin_langue/menu_241a`" \
        --menu "\n\Zb\Z3   `cat $chemin_langue/menu_243a` \Z1/dev/$port_usb_oscar :\n\n" 9 80 0 \
        "" "" \
        "" "\Zb\Z4`cat $chemin_langue/menu_241a`\Zn\Z2, $texte246." \
        "" "\Zb\Z4`cat $chemin_langue/Formater`\Zn\Z2, $texte245."\
        "" "" \
        "" "\Zn`cat $chemin_langue/menu_550` :  \Zn "
        case $? in
            3)  mise_a_jour=oui
                ;;
            1)  mise_a_jour=formater
                ;;
	    0) # Annuler
	    echo "" > /tmp/sortir
            return
            ;;
            255)
            echo "" > /tmp/sortir
            return
            ;;
        esac
fi
}
#----------------------------------------------------------------------------------------------------
confirmer_port_usb()	# car le choix est très dangereux
{
#	if [ "$demarrage_usb_cdcache" = "oui" ]
#	then
#		return
#	fi

proposer_la_mise_a_jour_si_usb_oscar_installe
	if ( test -e /tmp/sortir )
	then
		return
	fi

if [ "$mise_a_jour" = "formater" ]
then
	runme prepare_fichier_temptaille
	rm -f /tmp/bozo
	rm -f /tmp/tempfile
	
	egrep -v "sectors"   /tmp/fichier_disque_dur | \
	egrep -v "physical" | egrep -v "^Units" | \
	perl -pi -e 's/:/&&&/g; s/End//g; s/\*//g;  s/\+/ /g; s/\-/ /g; s/  /:/g; s/:+/:/g;' | \
	awk 'BEGIN { FS=":" } { printf ("%0s %15s %25s\n",$1,$4,$6)}' | \
	perl -pi -e 's/Disk/\\Zb\\Z1Disque\\Zb\\Z3/g; s/       Taille Mo/\\Zb\\Z4Partition       Taille Mo/g; s/System/  Type/g;' | \
	perl -pi -e 's/$/\\n/g;' | perl -pi -e 's/^\\n/\\Zn/g;' | \
	perl -pi -e 's/Zn /JF_oscar/g;' | grep -v "JF_oscar" | grep -v "^ " >> /tmp/tempfile ## cette ligne fait les retour @ la ligne
	
	cp -f /tmp/tempfile /tmp/fichier_disque_dur
	rm -f /tmp/tempfile

	# couleurs:
	perl -pi -e 's/FAT32/\\Z4FAT32\\Zn+/g; \
	s/FAT16/\\Z4FAT16\\Zn+/g; \
	s/NTFS/\\Z4NTFS\\Zn+/g; \
	s/Linux/\\Z2Linux\\Zn+/g; \
	s/\+ / /g; s/\+/ /g; \
	s/&&&/:/g; ' /tmp/fichier_disque_dur


	cp -f /tmp/fichier_disque_dur /tmp/menu_texte
        cp -f /tmp/menu_texte /tmp/bozo
        runme modifier_Linux_en_OSCAR
        cp -f /tmp/bozo /tmp/menu_texte

	echo "perl -pi -e 's/\/dev\/`cat /tmp/partition`/port_usb_oscar/g;' /tmp/exec_dialog" > /tmp/exec_nom
	chmod +x /tmp/exec_nom
	/tmp/exec_nom
	rm -f /tmp/exec_nom

	grep -v "^\"\/dev\/" /tmp/exec_dialog > /tmp/tempfile
	cp -f /tmp/tempfile /tmp/exec_dialog
	perl -pi -e 's/--cancel-label \"`cat \$chemin_langue\/Annuler`\"/--ok-label \"`cat \$chemin_langue\/Annuler`\" --cancel-label \"`cat \$chemin_langue\/Confirmer`\"/g;s/toutou = 1/toutou = 0/g;' /tmp/exec_dialog
	chmod +x /tmp/exec_dialog
	echo "perl -pi -e 's/port_usb_oscar/\/dev\/`cat /tmp/partition`/g;' /tmp/exec_dialog" > /tmp/exec_nom
	chmod +x /tmp/exec_nom
	/tmp/exec_nom
	rm -f /tmp/exec_nom

	# Confirmation du choix de la clé USB
	if ( test -e /tmp/disque_usb_oscar )
	then
		echo " `cat $chemin_langue/menu_232a` " > /tmp/menu_titre
	else
		echo " `cat $chemin_langue/menu_232` " > /tmp/menu_titre
	fi
	echo "`cat $chemin_langue/menu_233` \Zb\Z3$port_usb_oscar\Z4 `cat $chemin_langue/menu_234` \Z4: " > /tmp/fichierquestion

	/tmp/exec_dialog
	rm -f /tmp/exec_dialog
	rm -f /tmp/menu_titre
	rm -f /tmp/fichierquestion
	rm -f /tmp/disque
	rm -f /tmp/partition
	rm -f /tmp/nom_simple
	rm -f /tmp/tempfile
	if ( test -e /tmp/sortir )
	then
		return
	fi
	vitesse_vidage
	if ( test -e /tmp/sortir )
	then
		return
	fi
fi
}
#----------------------------------------------------------------------------------------------------
selection_port_usb()	# proposer les ports usb pour choisir port_usb_oscar
{
rm -f /tmp/fichierquestion
echo "" > /tmp/port_usb
# selection de la cle usb
if ( test -e /tmp/disque_usb_oscar )
then
	echo "\n`cat $chemin_langue/selection_39a` :\n " > /tmp/fichierquestion
	echo "\n`cat $chemin_langue/selection_40a`" >> /tmp/fichierquestion
else
	echo "\n`cat $chemin_langue/selection_39` :\n " > /tmp/fichierquestion
	echo "\n`cat $chemin_langue/selection_40`" >> /tmp/fichierquestion
fi
echo "" > /tmp/cle_usb_oscar
echo "" > /tmp/demande_cle_disque_usb
serveur_disque choisir_disque_maitre
if ( test -e /tmp/sortir )
then
	return
fi

port_usb_oscar=`cat /tmp/partition`	# sda
port_usb_oscar1=`cat /tmp/partition`1
if [ "$demarrage_usb_sans_cdcache" = "oui" ]
then
	if [ "$port_usb_oscar1" = "sdb1" ]
	then
		dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
		--ok-label "`cat $chemin_langue/Continuer`" \
		--title " `cat $chemin_langue/DESOLE` " \
		--msgbox "\n\n\Zb\Z1 `cat $chemin_langue/msgbox_78b` ...\Zn " 10 78
		echo "" > /tmp/sortir
		return
	fi
fi
confirmer_port_usb
if ( test -e /tmp/sortir )
then
	return
fi
}
#----------------------------------------------------------------------------------------------------
procedure_evolution_par_tempo()
{
sleep $valeur_tempo_sleep
echo -en "\033[1;31m=\033[1;m"
}
#----------------------------------------------------------------------------------------------------
afficher_evolution_par_tempo()
{
echo -en "\033[1;31m <\033[1;m"
valeur_tempo_sleep=`cat /tmp/valeur_tempo_sleep`
rm -f /tmp/valeur_tempo_sleep
valeur_fin_evolution_par_tempo=0
while [ "$valeur_fin_evolution_par_tempo" != 1 ]
do
	procedure_evolution_par_tempo
	if ( test -e /tmp/evolution_par_tempo )
	then
		valeur_fin_evolution_par_tempo=1
	fi
done
rm -f /tmp/evolution_par_tempo
echo -e "\033[1;31m> \033[1;m"
}
#----------------------------------------------------------------------------------------------------
decompresser_usb_iso()
{
rm -f /tmp/usb_iso
mkdir /tmp/decompresser_iso_usb 1>/dev/null 2>/dev/null
mount -o loop,exec /mnt/$partition_ntfs_usb/maj_OSCAR/$fichier_maj_usb /tmp/decompresser_iso_usb 1>/dev/null 2>/dev/null
cp -dpR /tmp/decompresser_iso_usb/* /mnt/$port_usb_oscar1
rm -fr /mnt/$port_usb_oscar1/syslinux
mv /mnt/$port_usb_oscar1/isolinux /mnt/$port_usb_oscar1/syslinux
if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
then
	perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
fi
umount /tmp/decompresser_iso_usb
rm -fr /tmp/decompresser_iso_usb
}
#----------------------------------------------------------------------------------------------------
decompression_fichiers_telecharge()
{
cd /mnt/$port_usb_oscar1
	if ! ( test -e /tmp/usb_iso )
	then
		dar -x /mnt/$partition_ntfs_usb/maj_OSCAR/$fichier_maj_usb -R /mnt/$port_usb_oscar1 -b -w -v 1>/dev/null 2>/dev/null # à voir option -b
	else
		decompresser_usb_iso
	fi
	md5sum /mnt/$port_usb_oscar1/sysrcd.dat > /tmp/md5sum_installe
	cut -d" " -f1 /tmp/md5sum_installe > /tmp/tempfile_md5
	md5sum_installe=`cat /tmp/tempfile_md5`
	cut -d" " -f1 /mnt/$port_usb_oscar1/sysrcd.md5 > /tmp/tempfile_md5
	md5sum_ethernet=`cat /tmp/tempfile_md5`
	rm -f /tmp/tempfile_md5
	umount /mnt/$partition_ntfs_usb 2>/dev/null 1>/dev/null ; sync
cd /root
echo "" > /tmp/evolution_par_tempo
}
#----------------------------------------------------------------------------------------------------
attendre_navigateur()
{
for passe in . . . . . . . .
do
	if ! ( test -e /tmp/fin_test_graphique )
	then
		sleep 2
		echo -en "\033[1;31m $passe\033[1;m"
	else
		rm -f /tmp/fin_test_graphique
		return	
	fi
done
}
#----------------------------------------------------------------------------------------------------
lancer_navigateur()
{
$navigateur_web http://oscar.crdp-lyon.fr/wiki/abo/telechargement 1>/tmp/test_graphique1 2>/tmp/test_graphique
if ( test -e /tmp/test_graphique1 )
then
	echo "`cat /tmp/test_graphique1`" >> /tmp/test_graphique
else
	echo "" >> /tmp/test_graphique
fi
rm -f /tmp/test_graphique1
echo "" > /tmp/fin_test_graphique
}
#----------------------------------------------------------------------------------------------------
mise_a_jour_par_internet()
{
fichier_maj_usb=non
partition_ntfs_usb=non
# id_type=`sfdisk /dev/$port_usb_oscar -c 2 2>/dev/null`
grep -i $port_usb_oscar"2" /tmp/fichier_disque_dur | grep -ci ntfs > /tmp/nb_partition_ntfs
nb_partition_ntfs=`cat /tmp/nb_partition_ntfs`
rm -f /tmp/nb_partition_ntfs
if ! [ "$nb_partition_ntfs" = "1" ] # partition ntfs
then
	# id_type=`sfdisk /dev/$port_usb_oscar -c 3 2>/dev/null`
	grep -i $port_usb_oscar"3" /tmp/fichier_disque_dur | grep -ci ntfs > /tmp/nb_partition_ntfs
	nb_partition_ntfs=`cat /tmp/nb_partition_ntfs`
	rm -f /tmp/nb_partition_ntfs
	if [ "$nb_partition_ntfs" = "1" ] # partition ntfs
	then
		partition_ntfs_usb=$port_usb_oscar"3"
	fi
else
	partition_ntfs_usb=$port_usb_oscar"2"
fi
if [ "$partition_ntfs_usb" != "non" ]
then
	echo "ntfs" > /tmp/besoin_type
	echo "$partition_ntfs_usb" > /tmp/monter_partition
	runme autoriser_monter_partition_oscar
	rm -f /tmp/monter_partition
	rm -f /tmp/besoin_type
	if ( test -e /mnt/$partition_ntfs_usb/maj_OSCAR )
	then
		# proposer le telechargement
		pkill midori
		pkill firefox-bin
		echo "$partition_ntfs_usb" > /tmp/partition_ntfs_usb
		if ( test -e /usr/bin/firefox-bin )
		then
			
			if ( test -e /opt/firefox/defaults/profile/prefs.js.init )
			then
				cp -f /opt/firefox/defaults/profile/prefs.js.init /opt/firefox/defaults/profile/prefs.js
			elif ( test -e /opt/firefox/defaults/profile/prefs.js )
			then
				cp -f /opt/firefox/defaults/profile/prefs.js /opt/firefox/defaults/profile/prefs.js.init
			fi
			echo "user_pref(\"browser.download.folderList\", 2);" >> /opt/firefox/defaults/profile/prefs.js
			echo "perl -pi -e 's/\/mnt/\/mnt\/`cat /tmp/partition_ntfs_usb`\/maj_OSCAR/g;' /opt/firefox/defaults/profile/prefs.js" > /tmp/exec_nom
			chmod +x /tmp/exec_nom
			/tmp/exec_nom
			rm -f /tmp/exec_nom
			rm -fR /root/.mozilla
		elif ( test -e /usr/bin/midori )
		then
			grep -v "download-folder=" /root/.config/midori/config > /tmp/tempcfg_download
			echo "download-folder=/mnt/`cat /tmp/partition_ntfs_usb`/maj_OSCAR" >> /tmp/tempcfg_download
			cp -f /tmp/tempcfg_download /root/.config/midori/config
			rm -f /tmp/tempcfg_download
		fi
		rm -f /tmp/partition_ntfs_usb
		
		
		rm -f /tmp/test_graphique
		rm -f /tmp/fin_test_graphique
		lancer_navigateur &
		echo
		echo -e " \033[1;32m`cat $chemin_langue/Procedure` : Navigateur web ...\033[1;34m"
		echo
		attendre_navigateur
		grep -ci "no display specified" /tmp/test_graphique > /tmp/nb_test_graphique
		grep -ci "Cannot open display" /tmp/test_graphique > /tmp/nb_test_graphique1
		nb_test_graphique=`cat /tmp/nb_test_graphique`
		nb_test_graphique1=`cat /tmp/nb_test_graphique1`
		rm -f /tmp/test_graphique
		rm -f /tmp/test_graphique1
		rm -f /tmp/nb_test_graphique
		rm -f /tmp/option_navigateur
		if [ "$nb_test_graphique" = 1 ] || [ "$nb_test_graphique1" = 1 ]
		then
			echo "http://oscar.crdp-lyon.fr/wiki/abo/telechargement" > /tmp/option_navigateur
			$run_navigateur
		fi
		dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
		--ok-label "`cat $chemin_langue/Continuer`" \
		--title " `cat $chemin_langue/Telechargement` " \
		--msgbox "\n\n\Zb\Z2 `cat $chemin_langue/menu_258e` \Zb\Z3/mnt/$partition_ntfs_usb/maj_OSCAR \Zb\Z2: \n\n  \Zb\Z4`cat $chemin_langue/Continuer`\Zn " 10 75

		# proposer une mise a jour
		ls /mnt/$partition_ntfs_usb/maj_OSCAR/OSCAR-* > /tmp/maj_temp 2>/dev/null
		grep -ci "\.iso" /tmp/maj_temp > /tmp/nb_maj_temp
		nb_maj_temp=`cat /tmp/nb_maj_temp`
		rm -f /tmp/nb_maj_temp
		if [ "$nb_maj_temp" = "0" ]
		then
			grep -ci "\-usb" /tmp/maj_temp > /tmp/nb_maj_temp
			nb_maj_temp=`cat /tmp/nb_maj_temp`
			rm -f /tmp/nb_maj_temp
		fi
		if [ "$nb_maj_temp" != "0" ]
		then
			# proposer la maj a utiliser
			grep -i "\-usb" /tmp/maj_temp > /tmp/maj_temp1
			grep -i "\.iso" /tmp/maj_temp >> /tmp/maj_temp1
			perl -pi -e 's/maj_OSCAR\//{/g;' /tmp/maj_temp1
			echo "-- `cat $chemin_langue/aucun` --" > /tmp/maj_temp2
			cut -d"{" -f2 /tmp/maj_temp1 >> /tmp/maj_temp2
			awk 'BEGIN { FS=":" } { printf ("%0s\n","\""$1"\" \"\" \\")}' /tmp/maj_temp2 > /tmp/bozo
			rm -f /tmp/maj_temp1
			rm -f /tmp/maj_temp2
			rm -f /tmp/maj_temp
			echo " `cat $chemin_langue/menu_258a` " > /tmp/menu_titre
			echo " \n \Zb\Z4`cat $chemin_langue/menu_258b` \Z4: " > /tmp/menu_texte
			echo "" > /tmp/fichierquestion
			runme boite_selection_bozo
			rm -f /tmp/hauteur
			rm -f /tmp/largeur
			rm -f /tmp/position
			nombre_aucun=
			if ( test -e /tmp/tempfile )
			then
				grep -ci "\-\-" /tmp/tempfile > /tmp/nombre_aucun
				nombre_aucun=`cat /tmp/nombre_aucun`
				rm -f /tmp/nombre_aucun
				if [ "$nombre_aucun" = "1" ]
				then
					echo "" > /tmp/sortir
				fi
			fi
			
			if ( test -e /tmp/sortir )
			then
				rm -f /tmp/tempfile
				umount /mnt/$partition_ntfs_usb 2>/dev/null 1>/dev/null ; sync
			else
				grep -ci "\-usb" /tmp/tempfile > /tmp/maj_usb_ancien
				test_valeur_usb_ancien=`cat /tmp/maj_usb_ancien`
				rm -f /tmp/maj_usb_ancien
				rm -f /tmp/usb_iso
				if ! [ "$test_valeur_usb_ancien" = 0 ]
				then	# usb ancien
					perl -pi -e 's/-usb/-usb{/g;' /tmp/tempfile
					cut -d"{" -f1 /tmp/tempfile > /tmp/tempfile_usb
				else	# iso
					cp -f /tmp/tempfile /tmp/tempfile_usb
					echo "" > /tmp/usb_iso
				fi
				rm -f /tmp/tempfile
				fichier_maj_usb=`cat /tmp/tempfile_usb`
				echo " `cat $chemin_langue/Decompression` $fichier_maj_usb `cat $chemin_langue/sur` $port_usb_oscar " > /tmp/tempfile_patience
				boite_info_patience
				rm -f /tmp/tempfile_patience
				rm -f /tmp/tempfile_usb
				rm -fr /mnt/$port_usb_oscar1/*
				rm -f /tmp/evolution_par_tempo
				decompression_fichiers_telecharge &
				echo "2" > /tmp/valeur_tempo_sleep
				afficher_evolution_par_tempo
				if [ "$md5sum_installe" != "$md5sum_ethernet" ]
				then
					dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
					--ok-label "`cat $chemin_langue/Continuer`" \
					--title " `cat $chemin_langue/DESOLE` " \
					--msgbox "\n\n \Zb\Z1`cat $chemin_langue/menu_258c`\n\n " 10 65
					telechargement_mauvais=oui
				fi
			fi
		else	# pas de sauvegarde telechargee par internet
			if [ "$demarrage_usb_cdcache" = "oui" ]
			then
				umount /mnt/$partition_ntfs_usb 2>/dev/null 1>/dev/null ; sync
				dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
				--ok-label "`cat $chemin_langue/Continuer`" \
				--title " `cat $chemin_langue/Information` " \
				--msgbox "\n\n \Zb\Z1`cat $chemin_langue/menu_258d`\n\n " 10 65
			fi
			rm -f /mnt/$port_usb_oscar1/* 2>/dev/null 1>/dev/null
		fi
		umount /mnt/$partition_ntfs_usb 2>/dev/null 1>/dev/null ; sync 
		rm -f /tmp/maj_temp
		return
	else	# pas de repertoire $partition_ntfs_usb/maj_OSCAR
		if [ "$demarrage_usb_cdcache" = "oui" ]
		then
			umount /mnt/$partition_ntfs_usb 2>/dev/null 1>/dev/null ; sync
			dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
			--ok-label "`cat $chemin_langue/Continuer`" \
			--title " `cat $chemin_langue/Information` " \
			--msgbox "\n\n \Zb\Z1`cat $chemin_langue/menu_473` \Zb\Z3/$partition_ntfs_usb/maj_OSCAR \n\n " 10 65
		fi
	fi
else # cle sans repertoire ntfs
	if [ "$demarrage_usb_cdcache" = "oui" ]
	then
		dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
		--ok-label "`cat $chemin_langue/Continuer`" \
		--title " `cat $chemin_langue/Information` " \
		--msgbox "\n\n \Zb\Z1`cat $chemin_langue/menu_473` \Z3NTFS /maj_OSCAR \n\n " 10 65
	fi
fi
rm -f /mnt/$port_usb_oscar1/* 2>/dev/null 1>/dev/null
}
#----------------------------------------------------------------------------------------------------
bargraphe_copie_squashfs()
{
fin_compression_squashfs=non
pourcentage_squashfs=0
valeur_fin_squahfs=0
while [ "$valeur_fin_squahfs" != 1 ]
do
	sleep 4
	# taille des fichiers transferes
	if ( test -e /tmp/avec_sous_repertoire_squashfs )
	then
		ls -sR $sortie_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
	elif ( test -e /tmp/sans_sous_repertoire_squashfs )
	then
		ls -s $sortie_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
	else
		ls -s $sortie_compression_squashfs | awk '{print $1 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
	fi
	perl -pi -e 's/ //g;' /tmp/liste_compression_squashfs
	taille_fichier_squashfs_copie=`cat /tmp/liste_compression_squashfs`1-1
	rm -f /tmp/liste_compression_squashfs
	taille_fichier_squashfs_copie=$[$taille_fichier_squashfs_copie]

	pourcentage_squashfs=$[100*$taille_fichier_squashfs_copie/$taille_fichier_compression_squashfs]

	if ( test -e /tmp/fin_compression_squashfs )
	then
		valeur_fin_squahfs=1
		pourcentage_squashfs=100
		rm -f /tmp/fin_compression_squashfs
	fi
	pourcentage_squashfs=$[$pourcentage_squashfs]
	echo $pourcentage_squashfs
done | DIALOGRC="/etc/dialogmenu_bloque" dialog --colors\
	--backtitle "`cat /etc/banniere_oscar`" \
	--title "`cat /tmp/tempfile_patience`" \
	--gauge "`cat $chemin_langue/infobox_22`" 13 62

rm -f /tmp/tempfile_patience
echo
echo -e " \033[1;32m`cat $chemin_langue/Patience` ...\033[1;34m"
echo
}
#-----------------------------------------------------------------------------------------------------
copie_compression_squashfs()
{
rm -f /tmp/fin_compression_squashfs
if ( test -e /tmp/avec_sous_repertoire_squashfs )
then
	cp -fR $fichier_compression_squashfs $sortie_compression_squashfs 1>/dev/null 2>/dev/null
elif ( test -e /tmp/sans_sous_repertoire_squashfs )
then
	cp -f $fichier_compression_squashfs/* $sortie_compression_squashfs 1>/dev/null 2>/dev/null
else # fichier seul
	cp -f $fichier_compression_squashfs $sortie_compression_squashfs 1>/dev/null 2>/dev/null
fi
echo "" > /tmp/fin_compression_squashfs
}
#-----------------------------------------------------------------------------------------------------
calculer_taille_fichier_compression()
{
# pour /livemnt/boot/sysrcd.dat
if ( test -e /tmp/avec_sous_repertoire_squashfs )
then
	ls -sR $fichier_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
elif ( test -e /tmp/sans_sous_repertoire_squashfs )
then
	ls -s $fichier_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
else	# un fichier
	ls -s $fichier_compression_squashfs | awk '{print $1 "+" }' > /tmp/liste_compression_squashfs	# par ligne : valeur
fi
perl -pi -e 's/ //g;' /tmp/liste_compression_squashfs
taille_fichier_compression_squashfs=`cat /tmp/liste_compression_squashfs`1-1
rm -f /tmp/liste_compression_squashfs
taille_fichier_compression_squashfs=$[$taille_fichier_compression_squashfs]
}
#----------------------------------------------------------------------------------------------------
controler_copie_md5sum()
{
echo 
echo -e " `cat $chemin_langue/texte_23` ...\033[1;m "
echo
md5sum /mnt/$port_usb_oscar1/sysrcd.dat > /tmp/valeur_md5sum_copiee
cut -d" " -f1 /tmp/valeur_md5sum_copiee > /tmp/valeur_md5sum_copiee1
valeur_md5sum_copiee=`cat /tmp/valeur_md5sum_copiee1`
valeur_md5sum_a_copier=`cat /tmp/valeur_md5sum_a_copier`
rm -f /tmp/valeur_md5sum_copiee
rm -f /tmp/valeur_md5sum_copiee1
rm -f /tmp/valeur_md5sum_a_copier
rm -f /tmp/sp_erreur_usb_oscar
if [ "$valeur_md5sum_a_copier" != "$valeur_md5sum_copiee" ]
then
	echo "" > /tmp/sp_erreur_usb_oscar
	return
fi
}
#----------------------------------------------------------------------------------------------------
installer_fichiers_oscar_sur_usb()	# mettre tous les fichiers sur la partition $port_usb_oscar1
{
# oscar lancé par le cédérom ou par le disque dur du poste (cas non étudié: récuperer depuis le fichier oscar.iso)
# Si on veux récuperer depuis le fichier oscar.iso il faudrait utiliser la commande :
## mkdir -p /mnt/iso
## mount -o loop /mnt/partition_vfat/OSCAR-1.0.3-date.iso /mnt/iso	# le cdrom serait visible dans /mnt/iso

if ! ( test -e /mnt/$port_usb_oscar1 )
then
	mkdir /mnt/$port_usb_oscar1
fi

echo "$port_usb_oscar1" > /tmp/monter_partition
runme autoriser_monter_partition_oscar	# pour monter la partition à vérifier pour "-t vfat"
rm -f /tmp/monter_partition

#au depart
#detecter le démarrage par clé USB dans /etc/demarrage_usb
#si démarrage cle USB faire umount /mnt/cdrom après avoir installer /etc/demarrage_usb au démarrage

if [ "$disque_usb_oscar" = "oui" ]
then
	texte_patience=`cat $chemin_langue/infobox_20a`
else
	texte_patience=`cat $chemin_langue/infobox_20`
fi

# mise a jour par internet
if [ "$sp_cdrom_oscar" != oui ]
then
	if ! ( test -e /usr/share/oscar/usr/initialise )
	then
		mise_a_jour_par_internet
		if ( test -e /tmp/sortir )
		then
			if [ "$nombre_aucun" != "1" ]
			then
				return
			fi
		fi
		
	else
		fichier_maj_usb=non
	fi
else
	fichier_maj_usb=non
fi

if [ "$fichier_maj_usb" = "non" ]
then
	echo " $texte_patience $port_usb_oscar " > /tmp/tempfile_patience
	boite_info_patience
fi

# mettre le clavier choisi:
if ! ( test -e /usr/share/oscar/usr/choix_clavier )
then
	clavier_grub
fi 

rm -f /tmp/avec_sous_repertoire_squashfs # initialise le bargraphe
rm -f /tmp/sans_sous_repertoire_squashfs
sp_controler_copie_md5sum=non
if [ "$fichier_maj_usb" != "non" ]
then
	# pour faire quelquechose
	fichier_maj_usb=non
elif [ "$sp_cdrom_oscar" = oui ]
then
	echo "/mnt/$port_usb_oscar1" > /tmp/continuer_installer_usb_cdrom
	# echo "" > /tmp/sans_sous_repertoire_squashfs
	# ls -s $fichier_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	#
	fichier_compression_squashfs=/mnt/custom/customcd/isoroot/sysrcd.dat
	sortie_compression_squashfs=/mnt/$port_usb_oscar1
	calculer_taille_fichier_compression
 	copie_compression_squashfs &
	bargraphe_copie_squashfs
	rm -f /tmp/sans_sous_repertoire_squashfs
	cp -f /mnt/custom/customcd/isoroot/sysrcd.md5 /mnt/$port_usb_oscar1/
	cut -d" " -f1 /mnt/custom/customcd/isoroot/sysrcd.md5 > /tmp/valeur_md5sum_a_copier
	sp_controler_copie_md5sum=oui
elif [ "$nombre_demarrage_pxe" = "1" ]
then
	cd /mnt/$port_usb_oscar1/
	wget http://$ip_serveur_pxe/ -r -X /Personnel -X /bootprog -R sysrcd.dat -R sysrcd.md5
	cd /root/
	echo
	echo -e " \033[1;32m`cat $chemin_langue/Patience` ...\033[1;34m"
	echo
	
	if ( test -e /mnt/$port_usb_oscar1/$ip_serveur_pxe/isolinux ) # si serveur pxe cederom
	then
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/isolinux /mnt/$port_usb_oscar1/syslinux 1>/dev/null 2>/dev/null
		if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
		then
			perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
		fi
		# mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/bootdisk/* /mnt/$port_usb_oscar1 1>/dev/null 2>/dev/null
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/bootdisk /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/boot /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/efi /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
		# mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/ntpasswd/* /mnt/$port_usb_oscar1 1>/dev/null 2>/dev/null
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/ntpasswd /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
	else
		mv /mnt/$port_usb_oscar1/$ip_serveur_pxe/* /mnt/$port_usb_oscar1/
		# mv /mnt/$port_usb_oscar1/bootdisk/* /mnt/$port_usb_oscar1 1>/dev/null 2>/dev/null
		# mv /mnt/$port_usb_oscar1/bootdisk /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
		# mv /mnt/$port_usb_oscar1/ntpasswd/* /mnt/$port_usb_oscar1 1>/dev/null 2>/dev/null
		# mv /mnt/$port_usb_oscar1/ntpasswd /mnt/$port_usb_oscar1 1>/dev/null 2>/dev/null
		# rm -fr /mnt/$port_usb_oscar1/bootdisk
		# rm -fr /mnt/$port_usb_oscar1/ntpasswd
	fi
	rm -fr /mnt/$port_usb_oscar1/$ip_serveur_pxe
	rm -f /mnt/$port_usb_oscar1/index.htm*
	
	# cp -f /usr/share/oscar/usr/syslinux18.cfg /mnt/$port_usb_oscar1/syslinux.cfg
	# cp -f /mnt/$port_usb_oscar1/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1
	cp -f /usr/share/oscar/usr/syslinux18.cfg /mnt/$port_usb_oscar1/syslinux/syslinux.cfg
	if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
	then
		perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
	fi
	cp -f /mnt/$port_usb_oscar1/syslinux/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1/syslinux/
	
	# cp -f /livemnt/boot/sysrcd.dat /mnt/$port_usb_oscar1/sysrcd.dat
	fichier_compression_squashfs=/livemnt/boot/sysrcd.dat
	sortie_compression_squashfs=/mnt/$port_usb_oscar1/sysrcd.dat
	calculer_taille_fichier_compression
 	copie_compression_squashfs &
	bargraphe_copie_squashfs
	cp -f /livemnt/boot/sysrcd.md5 /mnt/$port_usb_oscar1/sysrcd.md5
elif ( test -e /etc/demarrage_cdrom )
then
	# copie aussi le repertoire maps :
	cp -fR /livemnt/boot/isolinux /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
	mv /mnt/$port_usb_oscar1/isolinux /mnt/$port_usb_oscar1/syslinux
	cp -f /usr/share/oscar/usr/syslinux18.cfg /mnt/$port_usb_oscar1/syslinux/syslinux.cfg
	cp -fR /livemnt/boot/bootdisk /mnt/$port_usb_oscar1/
	cp -fR /livemnt/boot/boot /mnt/$port_usb_oscar1/ 2>/dev/null
	cp -fR /livemnt/boot/efi /mnt/$port_usb_oscar1/ 2>/dev/null
	if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
	then
		perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
	fi
	if ( test -e /livemnt/boot/ntpasswd )
	then
		cp -fR /livemnt/boot/ntpasswd /mnt/$port_usb_oscar1/
	fi
	if ( test -e /livemnt/boot/livecd.squashfs )
	then
		# cp -f /livemnt/boot/livecd.squashfs /mnt/$port_usb_oscar1/livecd.squashfs
		fichier_compression_squashfs=/livemnt/boot/livecd.squashfs
		sortie_compression_squashfs=/mnt/$port_usb_oscar1/livecd.squashfs
		calculer_taille_fichier_compression
	 	copie_compression_squashfs &
		bargraphe_copie_squashfs
	elif ( test -e /livemnt/boot/sysrcd.dat )
	then
		# cp -f /livemnt/boot/sysrcd.dat /mnt/$port_usb_oscar1/sysrcd.dat
		fichier_compression_squashfs=/livemnt/boot/sysrcd.dat
		sortie_compression_squashfs=/mnt/$port_usb_oscar1/sysrcd.dat
		calculer_taille_fichier_compression
	 	copie_compression_squashfs &
		bargraphe_copie_squashfs
		cp -f /livemnt/boot/sysrcd.md5 /mnt/$port_usb_oscar1/sysrcd.md5
		cut -d" " -f1 /livemnt/boot/sysrcd.md5 > /tmp/valeur_md5sum_a_copier
		sp_controler_copie_md5sum=oui
	fi
	cp -f /livemnt/boot/isolinux/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1/syslinux/
elif ( test -e /etc/demarrage_usb )
then
	if [ "$demarrage_usb_cdcache" = "oui" ]
	then
		# cp -fR /tftpboot/* /mnt/$port_usb_oscar1/ 2>/dev/null
		# echo "" > /tmp/sans_sous_repertoire_squashfs
		# ls -s $fichier_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	#
		fichier_compression_squashfs=/tftpboot/sysrcd.dat
		sortie_compression_squashfs=/mnt/$port_usb_oscar1
		calculer_taille_fichier_compression
	 	copie_compression_squashfs &
		bargraphe_copie_squashfs
		rm -f /tmp/sans_sous_repertoire_squashfs
		cp -f /tftpboot/sysrcd.md5 /mnt/$port_usb_oscar1/
		cut -d" " -f1 /tftpboot/sysrcd.md5 > /tmp/valeur_md5sum_a_copier
		sp_controler_copie_md5sum=oui

		cp -fR /tftpboot/syslinux /mnt/$port_usb_oscar1/
		cp -fR /tftpboot/bootdisk /mnt/$port_usb_oscar1/
		cp -fR /tftpboot/boot /mnt/$port_usb_oscar1/ 2>/dev/null
		if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
		then
			perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
		fi
		cp -fR /tftpboot/efi /mnt/$port_usb_oscar1/ 2>/dev/null
		cp -f /tftpboot/syslinux/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1/syslinux/
	else
		# cp -f /livemnt/boot/* /mnt/$port_usb_oscar1/ 2>/dev/null
		# echo "" > /tmp/sans_sous_repertoire_squashfs
		# ls -s $fichier_compression_squashfs | grep total | awk '{print $2 "+" }' > /tmp/liste_compression_squashfs	#
		fichier_compression_squashfs=/livemnt/boot/sysrcd.dat
		sortie_compression_squashfs=/mnt/$port_usb_oscar1
		calculer_taille_fichier_compression
	 	copie_compression_squashfs &
		bargraphe_copie_squashfs
		rm -f /tmp/sans_sous_repertoire_squashfs
		cp -f /livemnt/boot/sysrcd.md5 /mnt/$port_usb_oscar1/
		cut -d" " -f1 /livemnt/boot/sysrcd.md5 > /tmp/valeur_md5sum_a_copier
		sp_controler_copie_md5sum=oui
		
		cp -fR /livemnt/boot/syslinux /mnt/$port_usb_oscar1/
		cp -fR /livemnt/boot/bootdisk /mnt/$port_usb_oscar1/
		cp -fR /livemnt/boot/boot /mnt/$port_usb_oscar1/ 2>/dev/null
		cp -fR /livemnt/boot/efi /mnt/$port_usb_oscar1/ 2>/dev/null
		if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
		then
			perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
		fi
		cp -fr /livemnt/boot/syslinux/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1/syslinux/
	fi
else # demarrage depuis le disque dur du poste
	#	if ( test -e /oscar/livecd.squashfs )
	#	then
	#		if [ "$cd_base" = "oscar_sysrcd" ] # pour sysrcd
	#		then
	#			cp -f /oscar/livecd.squashfs /mnt/$port_usb_oscar1/livecd.squashfs
	#			mv /mnt/$port_usb_oscar1/livecd.squashfs /mnt/$port_usb_oscar1/sysrcd.dat
	#		else
	#			cp -f /oscar/livecd.squashfs /mnt/$port_usb_oscar1/livecd.squashfs
	#		fi
	#	fi
	
	# cp -f /usr/share/oscar/usr/oscar_usb/* /mnt/$port_usb_oscar1/ 1>/dev/null 2>/dev/null
	echo "" > /tmp/avec_sous_repertoire_squashfs
	fichier_compression_squashfs=/usr/share/oscar/usr/oscar_usb
	sortie_compression_squashfs=/mnt/$port_usb_oscar1/oscar_usb
	rm -fR /mnt/$port_usb_oscar1/oscar_usb
	calculer_taille_fichier_compression
 	copie_compression_squashfs &
	bargraphe_copie_squashfs
	rm -f /tmp/avec_sous_repertoire_squashfs
	mv /mnt/$port_usb_oscar1/oscar_usb/* /mnt/$port_usb_oscar1/ 2>/dev/null 1>/dev/null
	rm -fR /mnt/$port_usb_oscar1/oscar_usb
	mv /mnt/$port_usb_oscar1/isolinux /mnt/$port_usb_oscar1/syslinux
	if ( test -e /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg )
	then
		perl -pi -e 's/isolinux/syslinux/g;' /mnt/$port_usb_oscar1/boot/grub/grub-$version_sysrscd.cfg
	fi
	
	# cp -Rf /usr/share/oscar/usr/oscar_usb/maps /mnt/$port_usb_oscar1 : deja fait ci-dessus	
	cp -f /usr/share/oscar/usr/syslinux18.cfg /mnt/$port_usb_oscar1/syslinux/syslinux.cfg
	cp -f /usr/share/oscar/usr/oscar_usb/isolinux/maps/`cat /usr/share/oscar/usr/choix_clavier`.ktl /mnt/$port_usb_oscar1/syslinux
fi

if [ "$sp_cdrom_oscar" != oui ]
then
	cp -f /usr/share/oscar/usr/choix_clavier /mnt/$port_usb_oscar1/syslinux/
	cp -f /usr/share/oscar/usr/choix_langue /mnt/$port_usb_oscar1/syslinux/
	echo "perl -pi -e 's/setkmap\=fr/setkmap\=`cat /usr/share/oscar/usr/choix_clavier`/g; s/fr.ktl/`cat /usr/share/oscar/usr/choix_clavier`.ktl/g;' /mnt/$port_usb_oscar1/syslinux/syslinux.cfg" > /tmp/exec_nom
	chmod +x /tmp/exec_nom
	/tmp/exec_nom
	rm -f /tmp/exec_nom
fi
chmod 666 /mnt/$port_usb_oscar1/sysrcd.dat
if ! ( test -e /mnt/$port_usb_oscar1/Personnel )
then
	mkdir /mnt/$port_usb_oscar1/Personnel
fi
}
#----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
info_fin_usb()	# la clé est terminée
{
if [ "$disque_usb_oscar" = "oui" ]
then
	titre_fin=`cat $chemin_langue/menu_254a`
	texte_fin=`cat $chemin_langue/menu_253a`
else
	titre_fin=`cat $chemin_langue/menu_254`
	texte_fin=`cat $chemin_langue/menu_253`
fi
rm -f /tmp/sortir
	# Fin du transfert des fichiers sur cle USB
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Continuer`" --no-cancel \
	--title " $titre_fin " \
	--menu "\n\Zb\Z3   `cat $chemin_langue/menu_250`\n\n" 10 69 0 \
	"" "" \
	"" "              \Zb`cat $chemin_langue/menu_251`\Zb\Z4 $port_usb_oscar\Zn\Z2. " \
	"" "" \
	"" "" \
	"" "`cat $chemin_langue/menu_252`\Zn\Z2. " \
	"" "" \
	"" "" \
	"" "\Z2           $texte_fin." \
	"" ""
      case $? in
	    0)	exit;;
	    255) exit;;
	esac
}
#----------------------------------------------------------------------------------------------------
info_erreur()
{
#  Erreur d'installation de la clé USB
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "`cat $chemin_langue/Reessayer`" --cancel-label "`cat $chemin_langue/Quitter`" \
	--title " `cat $chemin_langue/menu_255` " \
	--menu "\n\Zb\Z3   `cat $chemin_langue/DESOLE`\n\n" 8 50 0 \
	"" "" \
	"" "\Zb\Z1OSCAR\Zn\Z2 `cat $chemin_langue/menu_256`\Zb\Z4 $port_usb_oscar\Zn\Z2. " \
	"" "" \
	"" "\Z2`cat $chemin_langue/menu_257`\Zn\Z2. " \
	"" " " \
	"" "\Z2       `cat $chemin_langue/menu_258`." \
	"" ""
case $? in
    0)	if [ "$sp_erreur_cdrom_oscar" != oui ]
    	then
    		installe_oscar_usb
    	else
    		echo "" > /tmp/sp_erreur_usb_oscar
    	fi
    	exit
	;;
    3) 	exit
	;;
    255) exit
	;;
esac
}
#----------------------------------------------------------------------------------------------------
boite_info_patience()
{
	# Patience
	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	--backtitle "`cat /etc/banniere_oscar`" \
	--title "`cat /tmp/tempfile_patience`" \
	--infobox "`cat $chemin_langue/infobox_22`" 13 60
}
#-----------------------------------------------------------------------------------------------------
cherche_valeurs_disque()
{
# fdisk -lu /dev/$port_usb_oscar 2>/dev/null | grep -i "^Disk \/dev\/" | grep -v "dev\/dm-" | \
# cut -d"," -f2 | cut -d" " -f2 > /tmp/taille_disque_octet
echo "$port_usb_oscar" > /tmp/calcul_taille_partition_disque
runme calcul_taille_partition_MB
taille_disque_octet=`cat /tmp/calcul_taille_partition_disque`
rm -f /tmp/calcul_taille_partition_disque
# taille_maxi_Mega=$[$taille_disque_octet/1000000]
taille_maxi_Mega=$[$taille_disque_octet/1000]
# taille_disque_octet=$[$taille_disque_octet * 1000000 / 1048576 ] # 1048576 
rm -f /tmp/taille_disque_octet
}
#-----------------------------------------------------------------------------------------------------
demonter_eventuellement_partition_boot()
{
# démonter éventuellement si la partition est montée
echo "$port_usb_oscar1" > /tmp/monter_partition
runme autoriser_monter_partition_oscar_montage
nombpart=`cat /tmp/nombpart`
if ! [ "$nombpart" = 0 ]
then
        umount /mnt/$port_usb_oscar1 2>/dev/null 1>/dev/null ; sync
fi
}
#-----------------------------------------------------------------------------------------------------
installer_mbr_seul()	# pour une partition deja formatee en fat32 mais vide situ\82e au debut du disque ou cle sur usb
{
demonter_eventuellement_partition_boot

# dd if=/dev/zero of=/dev/$port_usb_oscar bs=512 count=1 1>/dev/null 2>/dev/null	# vider si MBR existe
# install-mbr -r /dev/$port_usb_oscar -f	# reset nettoie le MBR
install-mbr -f /dev/$port_usb_oscar	# installe MBR
sleep 2
mkdosfs -vF 32 /dev/$port_usb_oscar"1" -n usb_OSCAR 1>/dev/null 2>/dev/null
sleep 3
parted /dev/$port_usb_oscar set 1 boot on  1>/dev/null 2>/dev/null
}
#-----------------------------------------------------------------------------------------------------
installer_mbr()
{
demonter_eventuellement_partition_boot

# nettoyer et installer le MBR sur le port ex: sdb

# Vidage complet de la clé USB $port_usb_oscar
if ( test -e /tmp/disque_usb_oscar )
then
	echo " `cat $chemin_langue/infobox_21a` $port_usb_oscar " > /tmp/tempfile_patience
else
	echo " `cat $chemin_langue/infobox_21` $port_usb_oscar " > /tmp/tempfile_patience
fi
boite_info_patience
if [ "$vidage" = "minutieux" ]
then
    dd if=/dev/zero of=/dev/$port_usb_oscar 1>/dev/null 2>/dev/null
else
    dd if=/dev/zero of=/dev/$port_usb_oscar bs=512 count=1 1>/dev/null 2>/dev/null	# vider si MBR existe
fi

rm -f /tmp/tempfile
install-mbr -r /dev/$port_usb_oscar -f	# reset nettoie le MBR
install-mbr -f /dev/$port_usb_oscar	# installe MBR
}
#-----------------------------------------------------------------------------------------------------
installer_repertoire_maj()
{
echo "ntfs" > /tmp/besoin_type
echo $repertoire_maj_ntfs > /tmp/monter_partition
runme autoriser_monter_partition_oscar
if ! ( test -e /mnt/$repertoire_maj_ntfs/maj_OSCAR )
then
	mkdir /mnt/$repertoire_maj_ntfs/maj_OSCAR
fi
rm -f /tmp/monter_partition
rm -f /tmp/besoin_type
umount /mnt/$repertoire_maj_ntfs ; sync
}
#-----------------------------------------------------------------------------------------------------
formater_cle_ou_disque()
{
installer_mbr

cherche_valeurs_disque # trouve la taille de partition
# taille_maxi_Mega=$[$taille_maxi_Mega-2]
taille_maxi_Mega=$[$taille_maxi_Mega]
taille_partition_systeme_oscar=1700	# taille en Mo

test_taille_usb=$[$taille_partition_systeme_oscar-$taille_maxi_Mega]
signe_test_taille_usb=`expr substr $test_taille_usb 1 1`

# installer la partition de boot et son système de fichier:
if [ "$signe_test_taille_usb" = "-" ]	# cle plus grande que $taille_partition_systeme_oscar Mo
then
	if ( test -e /tmp/disque_usb_oscar )
	then
		rm -f /tmp/disque_usb_oscar
		parted /dev/$port_usb_oscar mkpart primary fat32 0 $taille_partition_systeme_oscar -a cylinder 2>/dev/null 1>/dev/null # partition OSCAR
		echo
		echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"1" \033[1;m`cat $chemin_langue/en` \033[0;32mvfat\033[1;m "
		echo
		sleep 3
		mkdosfs -vF 32 /dev/$port_usb_oscar"1" -n usb_OSCAR 1>/dev/null 2>/dev/null
		test_taille_usb=$[50000-$taille_maxi_Mega]
		signe_test_taille_usb=`expr substr $test_taille_usb 1 1`
		if [ "$signe_test_taille_usb" = "-" ]	# disque plus grand que 50Go
		then
			taille_demi_disque=$[$taille_maxi_Mega/2]	# taille partition ext4 et ntfs
			parted /dev/$port_usb_oscar mkpart primary ext4 $taille_partition_systeme_oscar $taille_demi_disque -a cylinder  1>/dev/null 2>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"2" \033[1;m`cat $chemin_langue/en` \033[0;32mext4\033[1;m "
			echo
			sleep 3
			# tempo obligatoire avant le formatage
			mkfs.ext4 -vF /dev/$port_usb_oscar"2" -L usb_ext4 1>/dev/null 2>/dev/null
			parted /dev/$port_usb_oscar mkpart primary NTFS $taille_demi_disque $taille_maxi_Mega -a cylinder 1>/dev/null 2>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"3" \033[1;m`cat $chemin_langue/en` \033[0;32mntfs\033[1;m "
			echo
			sleep 4
			# tempo obligatoire avant le formatage
			mkntfs -f /dev/$port_usb_oscar"3" -L usb_ntfs 1>/dev/null 2>/dev/null
			fsck /dev/$port_usb_oscar"3" -N 2>/tmp/ntfs_valide 1>/dev/null
			grep -ci ntfs /tmp/ntfs_valide > /tmp/nb_ntfs_valide
			nb_ntfs_valide=`cat /tmp/nb_ntfs_valide`
			rm -f /tmp/nb_ntfs_valide
			rm -f /tmp/ntfs_valide
			if [ "$nb_ntfs_valide" = 0 ]
			then
				echo
				echo -e " \033[1;33mOSCAR \033[1;34mcorrige la partition \033[1;32m$repertoire ntfs \033[1;34m:"
				echo
				mkfs.ext4 -qF /dev/$port_usb_oscar"3"
				mkntfs -f /dev/$port_usb_oscar"3" -L usb_ntfs
			fi
			echo
			repertoire_maj_ntfs=$port_usb_oscar"3"
			installer_repertoire_maj
		else	# disque plus petit que 50Go
			parted /dev/$port_usb_oscar mkpart primary ext4 $taille_partition_systeme_oscar $taille_maxi_Mega -a cylinder  1>/dev/null 2>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"2" \033[1;m`cat $chemin_langue/en` \033[0;32mext4\033[1;m "
			echo
			sleep 3
			# tempo obligatoire avant le formatage
			mkfs.ext4 -vF /dev/$port_usb_oscar"2" -L usb_ext4 1>/dev/null 2>/dev/null
			echo
		fi
	else
		test_taille_usb=$[50000-$taille_maxi_Mega]
		signe_test_taille_usb=`expr substr $test_taille_usb 1 1`
		if [ "$signe_test_taille_usb" = "-" ]	# cle plus grande que 50Go
		then
			parted /dev/$port_usb_oscar mkpart primary fat32 0 $taille_partition_systeme_oscar -a cylinder 2>/dev/null 1>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"1" \033[1;m`cat $chemin_langue/en` \033[0;32mvfat\033[1;m "
			echo
			sleep 3
			mkdosfs -vF 32 /dev/$port_usb_oscar"1" -n usb_OSCAR 1>/dev/null 2>/dev/null
			parted /dev/$port_usb_oscar mkpart primary NTFS $taille_partition_systeme_oscar $taille_maxi_Mega -a cylinder  1>/dev/null 2>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"2" \033[1;m`cat $chemin_langue/en` \033[0;32mntfs\033[1;m "
			echo
			sleep 4
			# tempo obligatoire avant le formatage
			mkntfs -f /dev/$port_usb_oscar"2" -L usb_ntfs 1>/dev/null 2>/dev/null
			fsck /dev/$port_usb_oscar"2" -N 2>/tmp/ntfs_valide 1>/dev/null
			grep -ci ntfs /tmp/ntfs_valide > /tmp/nb_ntfs_valide
			nb_ntfs_valide=`cat /tmp/nb_ntfs_valide`
			rm -f /tmp/nb_ntfs_valide
			rm -f /tmp/ntfs_valide
			if [ "$nb_ntfs_valide" = 0 ]
			then
				echo
				echo -e " \033[1;33mOSCAR \033[1;34mcorrige la partition \033[1;32m$repertoire ntfs \033[1;34m:"
				echo
				mkfs.ext4 -qF /dev/$port_usb_oscar"2"
				mkntfs -f /dev/$port_usb_oscar"2" -L usb_ntfs
			fi
			echo
			repertoire_maj_ntfs=$port_usb_oscar"2"
			installer_repertoire_maj
		else	# si cle usb (non disque dur externe) on ne peut faire qu'une partition visible par windows
			parted /dev/$port_usb_oscar mkpart primary fat32 0 $taille_maxi_Mega -a cylinder 2>/dev/null 1>/dev/null
			echo
			echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"1" \033[1;m`cat $chemin_langue/en` \033[0;32mvfat\033[1;m "
			echo
			sleep 3
			mkdosfs -vF 32 /dev/$port_usb_oscar"1" -n usb_OSCAR 1>/dev/null 2>/dev/null
			echo
		fi
	fi
else	# cle plus petite que $taille_partition_systeme_oscarMo
	parted /dev/$port_usb_oscar mkpart primary fat32 0 $taille_maxi_Mega -a cylinder 2>/dev/null 1>/dev/null
	echo
	echo -e " --> `cat $chemin_langue/texte_16` \033[1;34m$port_usb_oscar"1" \033[1;m`cat $chemin_langue/en` \033[0;32mvfat\033[1;m "
	echo
	sleep 3
	mkdosfs -vF 32 /dev/$port_usb_oscar"1" -n usb_OSCAR 1>/dev/null 2>/dev/null
	echo
fi
sleep 2
parted /dev/$port_usb_oscar set 1 boot on  1>/dev/null 2>/dev/null
sleep 2
}
#-----------------------------------------------------------------------------------------------------
selection_et_formater()
{
selection_port_usb	# donne la valeur port_usb_oscar
if ( test -e /tmp/sortir )
then
	return
fi

#if [ "$demarrage_usb_cdcache" != "oui" ]
#then
	if [ "$mise_a_jour" = "formater" ]
	then
		if [ "$vidage" != "mbr_seul" ]
		then
			formater_cle_ou_disque
		else
			installer_mbr_seul
		fi
	fi
#fi
sleep 3
}
#----------------------------------------------------------------------------------------------------
installer_fichier_systeme_usb()
{
umount /mnt/$port_usb_oscar1 2>/dev/null 1>/dev/null ; sync
syslinux -f /dev/$port_usb_oscar1
mount /dev/$port_usb_oscar1 /mnt/$port_usb_oscar1
}
#----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
# programme principal
rm -f /tmp/sortir

	telechargement_mauvais=
	disque_usb_oscar=
	if ( test -e /tmp/disque_usb_oscar )
	then
		disque_usb_oscar=oui
	fi

	test_demarrage_usb

if ( test -e /usr/share/oscar/usr/grub-version.cfg )
then
	cut -d"-" -f1 /root/version | perl -pi -e 's/\.//g;' > /root/version1
	version_sysrscd=`cat /root/version1`
	rm -f /root/version1
fi

#  commandes externes de procédures
case "$1" in
	afficher_evolution_par_tempo)
		afficher_evolution_par_tempo
		exit 0
	;;
	info_depart_installe_oscar_sur_usb)
		sp_cdrom_oscar=oui
		#	if ( test -e /livemnt/boot/syslinux )
		#	then
		#		echo "" > /etc/demarrage_usb
		#	elif ( test -e /livemnt/boot/isolinux )
		#	then
		#		echo "" > /etc/demarrage_cdrom
		#	fi
		info_depart_installe_oscar_sur_usb
		if ( test -e /tmp/sortir )
		then
			exit 0
		fi
		selection_et_formater
		if ( test -e /tmp/sortir )
		then
			exit 0
		fi
		installer_fichiers_oscar_sur_usb
		if ( test -e /tmp/sortir )
		then
			exit 0
		fi
		if ( test -e /tmp/sp_erreur_usb_oscar )
		then
			exit 0
		fi
		installer_fichier_systeme_usb
		controler_copie_md5sum
		exit 0
	;;
	info_erreur)
		sp_erreur_cdrom_oscar=oui
		port_usb_oscar1=`cat /tmp/continuer_installer_usb_cdrom`
		port_usb_oscar=`expr substr $port_usb_oscar1 6 3`
		info_erreur
		exit 0
	;;
	info_fin_usb)
		disque_usb_oscar=non
		port_usb_oscar1=`cat /tmp/continuer_installer_usb_cdrom`
		port_usb_oscar=`expr substr $port_usb_oscar1 6 3`
		info_fin_usb
		exit 0
	;;
esac

runme test_cdrom_sysresccd	# demarrage cdrom non sous programme
if ( test -e /tmp/sortir_commande )
then
	exit
fi

#	telechargement_mauvais=
#	disque_usb_oscar=
#	if ( test -e /tmp/disque_usb_oscar )
#	then
#		disque_usb_oscar=oui
#	fi

#       recherche si client PXE
grep -ci "netboot=http:" /proc/cmdline > /tmp/tempfile
nombre_demarrage_pxe=`cat /tmp/tempfile`
ip_serveur_pxe=
if [ "$nombre_demarrage_pxe" = "1" ]
then
	echo "`cat /proc/cmdline`" > /tmp/tempfile
	perl -pi -e 's/netboot=http:\/\//?/g;' /tmp/tempfile
	cut -d"?" -f2 /tmp/tempfile > /tmp/temp1
	perl -pi -e 's/\/sysrcd.dat/?/g;' /tmp/temp1
	cut -d"?" -f1 /tmp/temp1 > /tmp/tempfile
	ip_serveur_pxe=`cat /tmp/tempfile`  ## pour telecharger un fichier dans /root/ : wget http://$ip_serveur_pxe/isolinux/oscar 
	rm -f /tmp/tempfile
	rm -f /tmp/temp1
	
	#	# Vous avez démarré ce poste avec un serveur
	#	DIALOGRC="/etc/dialogmenu_bloque" dialog --colors \
	#	--backtitle "`cat /etc/banniere_oscar`" \
	#	--title " `cat $chemin_langue/DESOLE` " \
	#	--ok-label "`cat $chemin_langue/Continuer`"  \
	#	--msgbox "`cat $chemin_langue/msgbox_40`\n\n\n" 12 54
	#	case $? in
	#		0)  exit;;
	#		255) exit;;
	#	esac
fi

# test_demarrage_usb

if ! [ "$nombre_demarrage_pxe" = "1" ]
then
	test_cdrom_isolinux_cd_enleve
fi

#
#au depart detecter le démarrage par clé USB dans /etc/demarrage_usb
#si démarrage cle USB faire umount /mnt/cdrom
#

info_depart_installe_oscar_sur_usb
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	exit
fi
selection_et_formater
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	exit
fi

# mettre tous les fichiers sur la partition $port_usb_oscar1:
installer_fichiers_oscar_sur_usb
if [ "$sp_controler_copie_md5sum" = oui ]
then
	controler_copie_md5sum
	if ( test -e /tmp/sp_erreur_usb_oscar )
	then
		rm -f /tmp/sp_erreur_usb_oscar
		info_erreur
	fi
fi
if ( test -e /tmp/sortir )
then
	rm -f /tmp/sortir
	exit
fi

if ! ( test -e /mnt/$port_usb_oscar1/syslinux/syslinux.cfg )
then
	umount /dev/$port_usb_oscar1 2>/dev/null 1>/dev/null ; sync
	info_erreur
fi

# installer le fichier systeme:
installer_fichier_systeme_usb
if ! ( test -e /mnt/$port_usb_oscar1/syslinux/oscar )
then	# cle non realisee
	umount /dev/$port_usb_oscar1 2>/dev/null 1>/dev/null ; sync
	info_erreur
else
	umount /dev/$port_usb_oscar1 2>/dev/null 1>/dev/null ; sync
	if [ "$telechargement_mauvais" = "oui" ]
	then
		info_erreur
	fi
	info_fin_usb
fi

## fin du programme principal  # Installation des fichiers OSCAR sur une clé USB
