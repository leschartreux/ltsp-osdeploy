#!/bin/sh


## Copyright (c) 2003-2013 Tissoires Jean-François & Benjamin, jftissoires@gmail.com
## Cdrom Outil Système Complet d'Assistance Réseau: OSCAR
## Ce programme est sous Licence Publique Générale GNU publiée par la Free Software Foundation.


PATH="/usr/share/oscar/bin:$PATH"
if ( test -e /usr/share/oscar/usr/choix_langue )
then
	choix_langue=`cat /usr/share/oscar/usr/choix_langue`
else
	echo "fr" > /usr/share/oscar/usr/choix_langue
	choix_langue=fr
	traduction
fi
chemin_langue=/usr/share/oscar/usr/langue/$choix_langue


#----------------------------------------------------------------------------------------------------
activer_procedure_serveur_nfs_ancien()
{
# cette procedure est inutile dans ce scripte
if [ "$valeur_procedure_serveur_nfs" = "simple" ]
then
	echo "simple" > $partition_linux/oscar/var_poste/procedure_serveur
elif [ "$valeur_procedure_serveur_nfs" = "simple+sauve" ]
then
	echo "simple+sauve" > $partition_linux/oscar/var_poste/procedure_serveur
elif [ "$valeur_procedure_serveur_nfs" = "table+simple" ]
then
	echo ",table_partitions" > $partition_linux/oscar/var_poste/procedure_serveur
	preparer_formater
elif [ "$valeur_procedure_serveur_nfs" = "complet" ]
then
	echo "simple+sauve,table_partitions" > $partition_linux/oscar/var_poste/procedure_serveur
	preparer_formater
elif [ "$valeur_procedure_serveur_nfs" = "table" ]
then
	echo ",table_partitions,formate" > $partition_linux/oscar/var_poste/procedure_serveur
	preparer_formater
fi
}
#----------------------------------------------------------------------------------------------------
choix_procedure_serveur_synchrone()
{
	# aide_choix "\Zb\Z4Synoptiques de toutes les procédures en synchrone." \
dialog  --no-cancel --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" --title " `cat $chemin_langue/menu_62` " \
	--menu  "`cat $chemin_langue/menu_63`" 8 80 0  \
	" " "" \
	quitter "`cat $chemin_langue/menu_61`" \
	" " "" \
	simple "`cat $chemin_langue/menu_64`" \
	aide_simple "`cat $chemin_langue/menu_65`" \
	" " "" \
	complète "`cat $chemin_langue/menu_66`" \
	aide_complète "`cat $chemin_langue/menu_67`" \
	" " "" \
	petite "`cat $chemin_langue/menu_68a`" \
	aide_petite "`cat $chemin_langue/menu_91a`" \
	" " "" \
	table "`cat $chemin_langue/menu_68`" \
	aide_table "`cat $chemin_langue/menu_69`" \
	" " "" \
	disque "`cat $chemin_langue/menu_70`" \
	aide_disque "`cat $chemin_langue/menu_71`" \
	" " "" 2>/tmp/tempfile

output=`cat /tmp/tempfile`
rm -f /tmp/serveur_multi_petite
if [ "$output" = " " ]
then
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "simple" ]
then
	echo "simple" > /tmp/procedure_serveur
	serveur_multi
	exit
elif [ "$output" = "petite" ]
then
	echo "petite" > /tmp/procedure_serveur
	echo "petite" > /tmp/serveur_multi_petite
	serveur_multi
	exit
elif [ "$output" = "complète" ]
then
	echo "complete" > /tmp/procedure_serveur
	serveur_clone
	exit
elif [ "$output" = "disque" ]
then
	echo "disque" > /tmp/procedure_serveur
	serveur_disque
	exit
elif [ "$output" = "table" ]
then
	echo "table" > /tmp/procedure_serveur
	serveur_table
	exit
elif [ "$output" = "aide_simple" ]
then
	aide_serveur serveur_client_multi
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "aide_petite" ]
then
	aide_serveur serveur_client_multi_petite
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "aide_complète" ]
then
	aide_serveur serveur_client_clone
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "aide_table" ]
then
	aide_serveur serveur_client_table
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "aide_disque" ]
then
	aide_serveur serveur_client_disque
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "aide_choix" ]
then
	aide_serveur serveur_client_synchrone
	choix_procedure_serveur_synchrone
	return
elif [ "$output" = "quitter" ]
then
	return
else
    choix_procedure_serveur_synchrone
    return
fi
choix_procedure_serveur_synchrone
return
}
#----------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------
#		SERVEUR  IMAGE avec le protocole linux
#-----------------------------------------------------------------------------------------------------
#   permet l'installation d'un SERVEUR en réseau qui partage sa partition image
choix_procedure_serveur_synchrone