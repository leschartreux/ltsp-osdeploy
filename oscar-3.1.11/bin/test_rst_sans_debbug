#!/bin/sh


## Copyright (c) 2003-2013 Tissoires Jean-François & Benjamin, jftissoires@gmail.com
## Cdrom Outil Système Complet d'Assistance Réseau: OSCAR
## Ce programme est sous Licence Publique Générale GNU publiée par la Free Software Foundation.


PATH="/usr/share/oscar/bin:$PATH"





# test la sauvegarde de la partition hda1 ou hdc1 sur la partition linux

## noyau 2.6:
## remplacer runme par runme




#-----------------------------------------------------------------------------------------------------
boucle_partition() # sortir la partition dans la reponse
{
	rm -f /tmp/tempfile
	echo "$type" > /tmp/tempfile
	runme prepare_boucle_partition
	nombretype=`cat /tmp/nombre`
	rm -f /tmp/nombre

numero=0
cp -f /tmp/tempfile /tmp/temp_ligne_deux_points
rm -f /tmp/tempfile
until  ( test  $numero = $nombretype )
    do
	rm -f /tmp/temp_ligne_deux_points1
#	rm -f /tmp/partfile1
	numero=$[$numero+1]
	echo `cut -d":" -f$numero /tmp/temp_ligne_deux_points` > /tmp/temp_ligne_deux_points1	#hdaiii
#	echo `cut -d":" -f$numero /tmp/partfile` > /tmp/partfile1	#ide/h0/b0/t0/l0/hdaiii
	reponse=`cat /tmp/temp_ligne_deux_points1`
	reparti=$reponse
	rm -f /tmp/temp_ligne_deux_points1
		numero_hd=`expr substr $reponse 4 3`
		disque=`expr substr $reponse 1 3`       #hda
#		disque=`cut -d/ -f1-5 /tmp/partfile1`/disc	#ide/h0/b0/t0/l0/disc
#		rm -f /tmp/partfile1
	        if [ "$type" = "linux" ]
		then
			# id_type=`sfdisk /dev/$disque -c $numero_hd 2>/dev/null`
			grep -i $reponse /tmp/fichier_disque_dur | grep -c Linux > /tmp/nb_partition_linux
		        nb_partition_linux=`cat /tmp/nb_partition_linux`
		        rm -f /tmp/nb_partition_linux
			if [ "$nb_partition_linux" = "1" ] # partition linux non swap
			then
				if ! ( test -e /mnt/$reponse )
				then	mkdir /mnt/$reponse
				fi
				rm -f /tmp/monter_partition
				echo "$reponse" > /tmp/monter_partition
				runme autoriser_monter_partition_oscar
				nombpart=`cat /tmp/nombpart`
				if [ "$nombpart" = 0 ]
				then			
					mount /dev/$reponse /mnt/$reponse
				fi
				if ( test -e /mnt/$reponse/image.partimage.000 ) ## sauvegarde dans ancienne version
			    	then
				    rm -f partition_de_sauvegarde
				    echo "$reponse" > partition_de_sauvegarde
				    changement_version_oscar changement_partition_sauvegarde
				fi
				if ( test -e /mnt/$reponse/oscar/image.partimage.000 )
				then
				    image_trouvee=oui
				    rm -f /tmp/temp_ligne_deux_points
#				    rm -f /tmp/partfile
				    return		
				fi
				umount /mnt/$reponse ; sync
			fi
		fi
    done
rm -f /tmp/tempfile
# rm -f /tmp/partfile
}
#----------------------------------------------------------------------------------------------------
#----------------------------------------------------------------------------------------------------
if ! ( test -e /etc/cdrom_ejecte )
then
	if ( test -e /etc/demarrage_cdcache )
	then
		echo "" > /etc/cdrom_ejecte	# cd ejecte
		# umount /mnt/cdrom  ; sync
		eject
	fi
fi
type="linux"
image_trouvee=non
boucle_partition

if [ "$image_trouvee" = "oui" ]
	then
		echo "/mnt/$reponse : monté linux" >> /tmp/historique
		if ( test -e /mnt/$reponse/oscar/partition_sauvegardee ) # lire le nom de la partition sauvegardée
		then
			base=`cat /mnt/$reponse/oscar/partition_sauvegardee`
		else
			un=1	# par defaut premiere partition
			base=hda$un
			echo "$base" > /mnt/$reponse/oscar/partition_sauvegardee			
		fi
#		rm -f /tmp/tempfile
#		echo "/dev/$base" > /tmp/tempfile
#		runme selection_disque
#		chemin_base=`cat /tmp/partition`
#		rm -f /tmp/tempfile

		if ! ( test -e /mnt/$reponse/oscar/taille_partition_$base )
		then	# installe le fichier de la taille de la partition restaurée
			# fdisk -s /dev/$base > /mnt/$reponse/oscar/taille_partition_$base
			echo "$base" > /tmp/calcul_taille_partition_disque
			runme calcul_taille_partition_MB
			cp -f /tmp/calcul_taille_partition_disque /mnt/$reponse/oscar/taille_partition_$base
			rm -f /tmp/calcul_taille_partition_disque
		fi
		
		grep -ci "," /mnt/$reponse/oscar/taille_partition_$base > /tmp/nbr_valeurs_tailles
		nbr_valeurs_tailles=`cat /tmp/nbr_valeurs_tailles`
		rm -f /tmp/nbr_valeurs_tailles
		if [ "$nbr_valeurs_tailles" = "0" ]
		then
			taille_image=`cat /mnt/$reponse/oscar/taille_partition_$base`
		else
			cut -d"," -f1 /mnt/$reponse/oscar/taille_partition_$base > /tmp/valeur_taille_image
			taille_image=`cat /tmp/valeur_taille_image`
			rm -f /tmp/valeur_taille_image
		fi
		
		if ! ( test -e /mnt/$reponse/oscar/date_de_sauvegarde )
		then
			date=$(date +%d-%m-%y)
			echo "avant le $date" > /mnt/$reponse/oscar/date_de_sauvegarde
			cp -f /mnt/$reponse/oscar/taille_partition_$base /mnt/$reponse/oscar/sauvegarde_$base:$[$taille_image/1024].Mo_avant_$date
		fi

	 	partimage -b -S restore /dev/$base /mnt/$reponse/oscar/image.partimage.000 -f3
	  	umount /mnt/$reponse ; sync
	  	echo
	  	echo -e "\033[1;31mSi la barre rouge est à 100% la partition \033[1;32m$base \033[1;31mest bien sauvegardée sur \033[1;32m$reponse \033[1;31m!!\033[1;m"
	  	echo
	  	echo
	  	echo -e "Sinon il faut formater la partition \033[1;32m$reponse \033[1;mavec la commande\033[1;33m gparted\033[1;m "
	  	echo -e "ou la commande \033[1;33mforma\033[1;m en minutieux du\033[1;34m menu_avancé\033[1;m, puis refaire une sauvegarde de \033[1;32m$base\033[1;m."
else
	rm -f /tmp/fichiertmp
	dialog --colors --no-shadow --backtitle "`cat /etc/banniere_oscar`" \
	--ok-label "Continuer" \
	--title " DESOLE " \
	--msgbox "\n\n\Z1 Il n'y a pas de partition qui possède la sauvegarde de ce poste...\Zn " 9 72
        rm -f /tmp/fichiertmp

fi